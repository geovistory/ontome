{% extends 'base.html.twig' %}

{% block title %}Create a new property{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet" />
{%  endblock %}

{% block body %}

    {% import _self as formMacros %}
    {% macro printTextPropertyRow(textPropertyForm) %}
        {{ form_errors(textPropertyForm) }}
        {{ form_row(textPropertyForm.textProperty, {
            'label': 'Scope note'
        }) }}
        {{ form_row(textPropertyForm.languageIsoCode, {
            'label': 'Language'
        }) }}
        {{ form_row(textPropertyForm.creator) }}
        {{ form_row(textPropertyForm.modifier) }}
    {% endmacro %}

    <div class="container">
        <div class="row">
            <div class="col-xs-12">
                <div class="pull-right reset-div">
                    <a href="{{ path('property_new', {'type':type,'class': app.request.get('class').id}) }}" class="btn btn-primary pull-right">Reset <span class="fa fa-undo"></span></a>
                </div>
                <h2>
                    Create a new property with {{ app.request.get('class') }} as range
                    <a href="{{ path('class_edit', {'id': app.request.get('class').id}) }}#properties" class="pull-right btn btn-link">
                        <i class="fas fa-arrow-left"></i><span>&nbsp;Back</span>
                    </a>
                </h2>

                {{ form_start(propertyForm) }}
                {{ form_errors(propertyForm) }}
                {% if  property.isManualIdentifier %}
                    {{ form_row(propertyForm.identifierInNamespace) }}
                {% else %}
                    {{ form_widget(propertyForm.identifierInNamespace, { 'attr': {'style': 'display:none'} }) }}
                {% endif %}
                {{ form_row(propertyForm.labels) }}
                <div class="row well well-sm" style="margin: 19px 0;">
                    <div class="col-lg-2">
                        <p class="text-center"><label>Domain</label></p>
                        <p>{{ form_widget(propertyForm.domain) }}</p>
                    </div>
                    <div class="col-lg-2">
                        <p class="text-center"><label>Domain quantifiers</label></p>
                        <div>
                            {{ form_widget(propertyForm.domainMinQuantifier, {'attr' : {'style': 'background-color: white; width: 49%; float: left;'}}) }}
                            {{ form_widget(propertyForm.domainMaxQuantifier, {'attr' : {'style': 'background-color: white; width: 49%; float: right;'}}) }}
                        </div>
                    </div>
                    <div class="col-lg-4">
                        <p class="text-center"><label>Property</label></p>
                        <p id="js-propertyLabel" class="text-center">→ Property Label →</p>
                    </div>
                    <div class="col-lg-2">
                        <p class="text-center"><label>Range quantifiers</label></p>
                        <div>
                            {{ form_widget(propertyForm.rangeMinQuantifier, {'attr' : {'style': 'background-color: white; width: 49%; float: left;'}}) }}
                            {{ form_widget(propertyForm.rangeMaxQuantifier, {'attr' : {'style': 'background-color: white; width: 49%; float: right;'}}) }}
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <p class="text-center"><label>Range</label></p>
                        <p class="text-center">{{ app.request.get('class') }}</p>
                    </div>
                </div>
                <div class="js-text-property-wrapper"
                     data-prototype="{{ formMacros.printTextPropertyRow(propertyForm.textProperties.vars.prototype)|e('html_attr') }}"
                     data-index="{{ propertyForm.textProperties|length }}"
                >
                    {% for textPropertyForm in propertyForm.textProperties %}
                        {{ formMacros.printTextPropertyRow(textPropertyForm) }}
                    {% endfor %}
                    <a href="#" class="js-example-add">
                        <span class="fa fa-plus-circle"></span>
                        Add an example
                    </a>

                </div>

                <button type="submit" class="btn btn-primary" formnovalidate>Save</button>
                {{ form_end(propertyForm) }}
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js"></script>
    <script>

        $(document).ready(function() {
            $('#ingoing_property_quick_add_form_domain').select2({
                sorter: function(data) {
                    /* Sort data using lowercase comparison */
                    return data.sort(function (a, b) {
                        a = a.text.toLowerCase();
                        b = b.text.toLowerCase();
                        if (a > b) {
                            return 1;
                        } else if (a < b) {
                            return -1;
                        }
                        return 0;
                    });
                }
            });

            if($('[for=ingoing_property_quick_add_form_textProperties_1_textProperty]').length) {
                //we hide the button in order to prevent the add of more than 2 text properties
                $('.js-example-add').hide();
                $('[for=ingoing_property_quick_add_form_textProperties_1_textProperty]').text('Example');
            }
            var $wrapper = $('.js-text-property-wrapper');
            $wrapper.on('click', '.js-example-add', function(e) {
                e.preventDefault();

                // Get the data-prototype explained earlier
                var prototype = $wrapper.data('prototype');

                // get the new index
                var index = $wrapper.data('index');

                // Replace '__name__' in the prototype's HTML to
                // instead be a number based on how many items we have
                var newForm = prototype.replace(/__name__/g, index);

                // increase the index with one for the next item
                $wrapper.data('index', index + 1);

                // Display the form in the page before the "new" link
                $(this).before(newForm);
                $('#ingoing_property_quick_add_form_textProperties_1_creator').val($('#ingoing_property_quick_add_form_labels_0_creator').val());
                $('#ingoing_property_quick_add_form_textProperties_1_modifier').val($('#ingoing_property_quick_add_form_labels_0_creator').val());
                $('.js-example-add').hide();
                $('[for=ingoing_property_quick_add_form_textProperties_1_textProperty]').text('Example');
            });

            $('#ingoing_property_quick_add_form_labels_0_label').keyup(function()
            {
                if($('#ingoing_property_quick_add_form_labels_0_label').val() != '')
                {
                    $('#js-propertyLabel').text('→ '+$('#ingoing_property_quick_add_form_labels_0_label').val()+' →');
                }
                else
                {
                    $('#js-propertyLabel').text('→ Property Label →');
                }
            });
        } );
    </script>
{% endblock %}