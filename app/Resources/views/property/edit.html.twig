{% extends 'base.html.twig' %}

{% block title %}{{ propertyVersion }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet" />
{% endblock %}


{% block body %}

    <div class="container">
        <div class="clearfix">
            <div class="pull-right" style="margin-top: 20px; margin-bottom: 10px;">
                <div class="dropdown inline-block">
                    <button class="btn btn-default dropdown-toggle" type="button" id="dropdownVersions" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true">
                        {{ propertyVersion.namespaceForVersion }}
                        <span class="label label-{{ propertyVersion.namespaceForVersion.status.classCss }}">
                            {{ propertyVersion.namespaceForVersion.status.label }}
                        </span>
                        <span class="caret"></span>
                    </button>
                    <ul class="dropdown-menu" aria-labelledby="dropdownVersions">
                        {% if propertyVersion.property.propertyVersions|length > 1 %}
                            {% for otherPropertyVersion in propertyVersion.property.propertyVersions if otherPropertyVersion != propertyVersion %}
                                <li>
                                    <a href="#">{{ otherPropertyVersion.namespaceForVersion }}
                                        <span class="label label-{{ otherPropertyVersion.namespaceForVersion.status.classCss }}">
                                            {{ otherPropertyVersion.namespaceForVersion.status.label }}
                                        </span>
                                    </a>
                                </li>
                            {% endfor %}
                        {% else %}
                            <li class="disabled">
                                <a href="#">No other version</a>
                            </li>
                        {% endif %}
                    </ul>
                </div>
            </div>
            <h2>{{ propertyVersion }}</h2>
            {% if propertyVersion.propertyOfOrigin is not null %}
                [inherited, cf. <a href="{{ path('property_show', {'id': propertyVersion.property.propertyOfOrigin.id}) }}" target="_blank"><em>original</em></a>]
            {% endif %}
        </div>
        <div>
            {% set countValidationsTxtp = 0 %}
            {% set countValidationsLbl = 0 %}

            {% for textProperty in propertyVersion.property.textProperties
                if textProperty.systemType.id == 1
                and textProperty.namespaceForVersion.id in namespacesId %}
                {% if textProperty.validationStatus is not null and textProperty.validationStatus.id == 26 %}
                    {% set countValidationsTxtp = countValidationsTxtp + 1 %}
                {% endif %}
            {% endfor %}

            {% for label in propertyVersion.property.labels
                if label.namespaceForVersion.id in namespacesId %}
                {% if label.validationStatus is not null and label.validationStatus.id == 26 %}
                    {% set countValidationsLbl = countValidationsLbl + 1 %}
                {% endif %}
            {% endfor %}

            {% if countValidationsTxtp > 0 and countValidationsLbl > 0 %}
                {{ include('property/_validation.html.twig') }}
            {% else %}
                <h6><span class="glyphicon glyphicon-info-sign" aria-hidden="true"></span><em>This property does not yet have the minimum number of validated parts required for publication.</em></h6>
            {% endif %}
        </div>
        <ul class="nav nav-tabs" id="main-tabs">
            <li class="active"><a data-toggle="tab" href="#summary">Summary</a></li>
            <li><a data-toggle="tab" href="#identification">Identification</a></li>
            <li><a data-toggle="tab" href="#definition">Definition</a></li>
            <li><a data-toggle="tab" href="#namespaces">Namespaces</a></li>
            <li><a data-toggle="tab" href="#property-hierarchy">Hierarchy</a></li>
            <li><a data-toggle="tab" href="#relations">Relations</a></li>
            <li><a data-toggle="tab" href="#profiles">Profiles</a></li>
            <li><a data-toggle="tab" href="#comments" class="updateViewComment" data-id="{{ propertyVersion.property.id }}" data-object="property">
                    Comments
                    {% set commentsProperty = propertyVersion.property.comments %}
                    {% set commentsPropertyVersion = commentsProperty|filter(commentsProperty => commentsProperty.namespaceForVersion.id == propertyVersion.namespaceForVersion.id) %}
                    <span class="badge {% if commentsPropertyVersion is not empty %}progress-bar-danger {% endif %}">
                        {{ commentsPropertyVersion|length }}
                    </span>
                </a>
            </li>
        </ul>

        <div class="tab-content">
            <div id="summary" class="tab-pane fade in active">
                <h3>
                    {% if propertyVersion.property.identifierInNamespace != propertyVersion.standardLabel %}
                        {{ propertyVersion.property.identifierInNamespace }} {{ propertyVersion.standardLabel }}
                    {% else %}
                        {{ propertyVersion.standardLabel }}
                    {% endif %}
                </h3>
                <div class="container">
                    {% if propertyVersion.domainNamespace is not null %}
                        <div class="row">
                            <div class="col-lg-2">
                                <p>Domain:</p>
                            </div>
                            <div class="col-lg-10">
                                <p>{# Initialisation #}
                                    {% set isGoodNamespace = true %}
                                    {% set route = 'class_show_with_version' %}
                                    {% set route_params = {'id': propertyVersion.domain.id,  'namespaceFromUrlId': propertyVersion.domainNamespace.id } %}

                                    {# Vérification #}
                                    {% if propertyVersion.domainNamespace.id not in propertyVersion.namespaceForVersion.selectedNamespacesId %}
                                        {% set isGoodNamespace = false %}
                                        {% set route = 'namespace_show' %}
                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                    {% endif %}

                                    <a href="{{ path(route, route_params) }}" title="{{ propertyVersion.domainNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                        {{ propertyVersion.domain.classVersionForDisplay(propertyVersion.domainNamespace).invertedLabel(true) }}</a>
                                </p>
                            </div>
                        </div>
                    {% endif %}
                    {% if propertyVersion.rangeNamespace is not null %}
                        <div class="row">
                            <div class="col-lg-2">
                                <p>Range:</p>
                            </div>
                            <div class="col-lg-10">
                                <p>{# Initialisation #}
                                    {% set isGoodNamespace = true %}
                                    {% set route = 'class_show_with_version' %}
                                    {% set route_params = {'id': propertyVersion.range.id,  'namespaceFromUrlId': propertyVersion.rangeNamespace.id } %}

                                    {# Vérification #}
                                    {% if propertyVersion.rangeNamespace.id not in propertyVersion.namespaceForVersion.selectedNamespacesId %}
                                        {% set isGoodNamespace = false %}
                                        {% set route = 'namespace_show' %}
                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                    {% endif %}

                                    <a href="{{ path(route, route_params) }}" title="{{ propertyVersion.rangeNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                        {{ propertyVersion.range.classVersionForDisplay(propertyVersion.rangeNamespace).invertedLabel(true) }}</a>
                                </p>
                            </div>
                        </div>
                    {% endif %}

                    {# Subproperty of #}
                    {% set isSubpropertyOf = false %}
                    {% for association in propertyVersion.property.childPropertyAssociations
                        if association.namespaceForVersion.id in namespacesId %}
                        {% set isSubpropertyOf = true %}
                    {% endfor %}
                    {% if isSubpropertyOf %}
                        <div class="row">
                            <div class="col-lg-2">
                                <p>Subproperty of:</p>
                            </div>
                            <div class="col-lg-10">
                                <ul class="list-unstyled">
                                    {% for association in propertyVersion.property.childPropertyAssociations
                                        if association.namespaceForVersion.id in namespacesId %}
                                        <li>
                                            {# Domaine #}
                                            {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domain is not null %}
                                                {# Initialisation #}
                                                {% set isGoodNamespace = true %}
                                                {% set route = 'class_show_with_version' %}
                                                {% set route_params = {'id': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domain.id,  'namespaceFromUrlId': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainNamespace.id } %}

                                                {# Vérification #}
                                                {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainNamespace.id not in association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).namespaceForVersion.selectedNamespacesId %}
                                                    {% set isGoodNamespace = false %}
                                                    {% set route = 'namespace_show' %}
                                                    {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                                {% endif %}

                                                <a href="{{ path(route, route_params) }}" title="{{ association.parentPropertyNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                    {{ association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domain.classVersionForDisplay(association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainNamespace).invertedLabel(true) }}</a>
                                            {% endif %}
                                            →
                                            {# Propriété #}
                                            {# Initialisation #}
                                            {% set isGoodNamespace = true %}
                                            {% set route = 'property_show_with_version' %}
                                            {% set route_params = {'id': association.parentProperty.id,  'namespaceFromUrlId': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).namespaceForVersion.id } %}

                                            {# Vérification #}
                                            {% if association.parentPropertyNamespace.id not in association.namespaceForVersion.selectedNamespacesId %}
                                                {% set isGoodNamespace = false %}
                                                {% set route = 'namespace_show' %}
                                                {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                            {% endif %}

                                            <a href="{{ path(route, route_params) }}" title="{{ association.parentPropertyNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                {{ association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).invertedLabel(true) }}</a>
                                            →
                                            {# Range #}
                                            {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).range is not null %}
                                                {# Initialisation #}
                                                {% set isGoodNamespace = true %}
                                                {% set route = 'class_show_with_version' %}
                                                {% set route_params = {'id': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).range.id,  'namespaceFromUrlId': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeNamespace.id } %}

                                                {# Vérification #}
                                                {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeNamespace.id not in association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).namespaceForVersion.selectedNamespacesId %}
                                                    {% set isGoodNamespace = false %}
                                                    {% set route = 'namespace_show' %}
                                                    {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                                {% endif %}

                                                <a href="{{ path(route, route_params) }}" title="{{ association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                    {{ association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).range.classVersionForDisplay(association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeNamespace).invertedLabel(true) }}</a>
                                            {% endif %}
                                        </li>
                                    {% endfor %}
                                </ul>
                            </div>
                        </div>
                    {% endif %}
                    {# Superproperty of #}
                    {% set isSuperpropertyOf = false %}
                    {% for association in propertyVersion.property.parentPropertyAssociations
                        if association.namespaceForVersion.id in namespacesId %}
                        {% set isSuperpropertyOf = true %}
                    {% endfor %}
                    {% if isSuperpropertyOf %}
                        <div class="row">
                            <div class="col-lg-2">
                                <p>Superproperty of:</p>
                            </div>
                            <div class="col-lg-10">
                                <ul class="list-unstyled">
                                    {% for association in propertyVersion.property.parentPropertyAssociations
                                        if association.namespaceForVersion.id in namespacesId %}
                                        <li>
                                            {# Domain #}
                                            {% if association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).domain is not null %}
                                                {# Initialisation #}
                                                {% set isGoodNamespace = true %}
                                                {% set route = 'class_show_with_version' %}
                                                {% set route_params = {'id': association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).domain.id,  'namespaceFromUrlId': association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).domainNamespace.id } %}

                                                {# Vérification #}
                                                {% if association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).domainNamespace.id not in association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).namespaceForVersion.selectedNamespacesId %}
                                                    {% set isGoodNamespace = false %}
                                                    {% set route = 'namespace_show' %}
                                                    {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                                {% endif %}

                                                <a href="{{ path(route, route_params) }}" title="{{ association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).domainNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                    {{ association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).domain.classVersionForDisplay(association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).domainNamespace).invertedLabel(true) }}</a>
                                            {% endif %}
                                            →
                                            {# Property #}
                                            {# Initialisation #}
                                            {% set isGoodNamespace = true %}
                                            {% set route = 'property_show_with_version' %}
                                            {% set route_params = {'id': association.childProperty.id,  'namespaceFromUrlId': association.childPropertyNamespace.id } %}

                                            {# Vérification #}
                                            {% if association.childPropertyNamespace.id not in association.namespaceForVersion.selectedNamespacesId %}
                                                {% set isGoodNamespace = false %}
                                                {% set route = 'namespace_show' %}
                                                {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                            {% endif %}

                                            <a href="{{ path(route, route_params) }}" title="{{ association.childPropertyNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                {{ association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).invertedLabel(true) }}</a>
                                            →
                                            {# Range #}
                                            {% if association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).range is not null %}
                                                {# Initialisation #}
                                                {% set isGoodNamespace = true %}
                                                {% set route = 'class_show_with_version' %}
                                                {% set route_params = {'id': association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).range.id,  'namespaceFromUrlId': association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).rangeNamespace.id } %}

                                                {# Vérification #}
                                                {% if association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).rangeNamespace.id not in association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).namespaceForVersion.selectedNamespacesId %}
                                                    {% set isGoodNamespace = false %}
                                                    {% set route = 'namespace_show' %}
                                                    {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                                {% endif %}

                                                <a href="{{ path(route, route_params) }}" title="{{ association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).rangeNamespace }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                    {{ association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).range.classVersionForDisplay(association.childProperty.propertyVersionForDisplay(association.childPropertyNamespace).rangeNamespace).invertedLabel(true) }}</a>
                                            {% endif %}
                                        </li>
                                    {% endfor %}
                                </ul>
                            </div>
                        </div>
                    {% endif %}
                    <div class="row">
                        <div class="col-lg-2">
                            <p>Quantification:</p>
                        </div>
                        <div class="col-lg-10">
                            {% if propertyVersion.quantifiers is not null %}
                                <p>{{ propertyVersion.quantifiers }}</p>
                            {% else %}
                                <p><i>No quantifiers yet.</i></p>
                            {% endif %}
                        </div>
                    </div>
                    {% if propertyVersion.property.entityAssociations|length > 0 %}
                        <div class="row">
                            <div class="col-lg-2">
                                <p>Relations:</p>
                            </div>
                            <div class="col-lg-10">
                                <ul class="list-unstyled">
                                    {% set relationCount = 0 %}
                                    {% for relation in propertyVersion.property.entityAssociations
                                        if relation.systemType.id in [18,20]
                                        and relation.namespaceForVersion.id in namespacesId %}
                                        {% set relationCount = relationCount + 1 %}
                                        {% if relationCount > 0 %}
                                            <li>{{ relation.systemType.standardLabel }}
                                                {% if relation.sourceProperty.id == propertyVersion.property.id %}
                                                    {# Initialisation #}
                                                    {% set isGoodNamespace = true %}
                                                    {% set route = 'property_show_with_version' %}
                                                    {% set route_params = {'id': relation.targetProperty.id,  'namespaceFromUrlId': relation.targetNamespaceForVersion.id } %}

                                                    {# Vérification #}
                                                    {% if relation.targetNamespaceForVersion.id not in relation.namespaceForVersion.selectedNamespacesId %}
                                                        {% set isGoodNamespace = false %}
                                                        {% set route = 'namespace_show' %}
                                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                                    {% endif %}

                                                    <a href="{{ path(route, route_params) }}" title="{{ relation.targetNamespaceForVersion }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                        {{ relation.targetProperty.propertyVersionForDisplay(relation.targetNamespaceForVersion).invertedLabel(true) }}
                                                    </a>
                                                {% else %}
                                                    {# Initialisation #}
                                                    {% set isGoodNamespace = true %}
                                                    {% set route = 'property_show_with_version' %}
                                                    {% set route_params = {'id': relation.sourceProperty.id,  'namespaceFromUrlId': relation.sourceNamespaceForVersion.id } %}

                                                    {# Vérification #}
                                                    {% if relation.sourceNamespaceForVersion.id not in relation.namespaceForVersion.selectedNamespacesId %}
                                                        {% set isGoodNamespace = false %}
                                                        {% set route = 'namespace_show' %}
                                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                                    {% endif %}

                                                    <a href="{{ path(route, route_params) }}" title="{{ relation.sourceNamespaceForVersion }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                                        {{ relation.sourceProperty.propertyVersionForDisplay(relation.sourceNamespaceForVersion).invertedLabel(true) }}
                                                    </a>
                                                {% endif %}
                                            </li>
                                        {% endif %}
                                    {% endfor %}
                                </ul>
                            </div>
                        </div>
                    {% endif %}
                    <div class="row">
                        <div class="col-lg-2">
                            <p>Scope note:</p>
                        </div>
                        <div class="col-lg-10">
                            {% set scopeNote=null %}
                            {% set break=false %}
                            {# Filtrer les textproperties avec namespacesId #}
                            {# SystemType utilisé: 1=Scope note #}
                            {# Retrouver en priorité le scope note en anglais #}
                            {% for textProperty in propertyVersion.property.textProperties
                                if textProperty.namespaceForVersion.id in namespacesId
                                and textProperty.systemType.id == 1
                                and not break %}
                                {% if textProperty.languageIsoCode == 'en' %}
                                    {% set break = true %}{# En anglais donc prioritaire: break #}
                                    {% set scopeNote = textProperty.textProperty %}
                                {% else %}
                                    {% if scopeNote is null %}
                                        {% set scopeNote = textProperty.textProperty %}
                                    {% endif %}
                                {% endif %}
                            {% endfor %}
                            {% if scopeNote is null %}
                                {% set scopeNote = '<i>No scope note yet.</i>' %}
                            {% endif %}
                            {{ scopeNote|raw }}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p>Examples:</p>
                        </div>
                        <div class="col-lg-10">
                            {% set isExamplesEmpty = true %}
                            {# Filtrer les textproperties avec namespacesId #}
                            {# SystemType utilisé: 7=Example #}
                            {% for textProperty in propertyVersion.property.textProperties
                                if textProperty.namespaceForVersion.id in namespacesId
                                and textProperty.systemType.id == 7 %}
                                {% set isExamplesEmpty = false %}
                                {{ textProperty.textProperty|raw }}
                            {% endfor %}
                            {% if isExamplesEmpty %}
                                <p><i>No example yet.</i></p>
                            {% endif %}
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-2">
                            <p>In First Order Logic:</p>
                        </div>
                        <div class="col-lg-10">
                            <ul class="list-unstyled">
                                {% if propertyVersion.domain is not null %}
                                    <li>{{ propertyVersion.property.identifierInNamespace }}(x,y) ⊃ {{ propertyVersion.domain.identifierInNamespace }}(x)</li>
                                {% endif %}
                                {% if propertyVersion.range is not null %}
                                    <li>{{ propertyVersion.property.identifierInNamespace }}(x,y) ⊃ {{ propertyVersion.range.identifierInNamespace }}(y)</li>
                                {% endif %}
                                {% for association in propertyVersion.property.childPropertyAssociations
                                    if association.namespaceForVersion.id in namespacesId %}
                                    <li>{{ propertyVersion.property.identifierInNamespace }}(x,y) ⊃ {{ association.parentProperty.identifierInNamespace }}(x,y)</li>
                                {% endfor %}
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div id="definition" class="tab-pane fade">
                <div class="pull-right add-div">
                    <a href="{{ path('text_property_new', {'type': 'scope-note', 'object': 'property', 'objectId': propertyVersion.property.id })}}"
                       class="btn btn-primary pull-right">
                        Add <span class="fa fa-plus-circle"></span>
                    </a>
                </div>
                <h3>Scope Notes</h3>
                <table class="table table-striped" id="scope-notes-table">
                    <thead>
                    <tr>
                        <th>Show</th>
                        <th>Scope note</th>
                        <th>Language</th>
                        <th>Namespace</th>
                        <th>Edit</th>
                        <th>Comments</th>
                        <th>Validation</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for textProperty in propertyVersion.property.textProperties
                        if textProperty.systemType.id == 1
                        and textProperty.namespaceForVersion.id in namespacesId %}
                        {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        <tr>
                            <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                            <td class="truncated-text">
                                <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            </td>
                            <td>{{ textProperty.languageIsoCode}}</td>
                            <td>{{ textProperty.namespaceForVersion }}</td>
                            <td>
                                <a href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}"
                                   class="btn btn-xs btn-success">
                                    <span class="fa fa-edit"></span>
                                </a>
                            </td>
                            <td>
                                <a class="btn updateViewComment" href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}#comments" data-id="{{ textProperty.id }}" data-object="text-property">
                                    <span class="badge {% if textProperty.comments|length > 0  %}progress-bar-danger {% endif %}">{{ textProperty.comments|length }}</span>
                                </a>
                            </td>
                            <td>
                                {% if textProperty.validationStatus is null %}
                                    <span class="label label-info">
                                    Candidate
                                </span>
                                {% elseif textProperty.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% elseif textProperty.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% elseif textProperty.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <div class="pull-right add-div">
                    <a href="{{ path('text_property_new', {'type': 'example', 'object': 'property', 'objectId': propertyVersion.property.id })}}"
                       class="btn btn-primary pull-right">
                        Add <span class="fa fa-plus-circle"></span>
                    </a>
                </div>
                <h3>Examples</h3>
                <table class="table table-striped" id="examples-table">
                    <thead>
                    <tr>
                        <th>Show</th>
                        <th>Example</th>
                        <th>Language</th>
                        <th>Namespace</th>
                        <th>Edit</th>
                        <th>Comments</th>
                        <th>Validation</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for textProperty in propertyVersion.property.textProperties
                        if textProperty.systemType.id == 7
                        and textProperty.namespaceForVersion.id in namespacesId %}
                        {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        <tr>
                            {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                            <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                            <td class="truncated-text">
                                <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            </td>
                            <td>{{ textProperty.languageIsoCode}}</td>
                            <td>{{ textProperty.namespaceForVersion }}</td>
                            <td>
                                <a href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}"
                                   class="btn btn-xs btn-success">
                                    <span class="fa fa-edit"></span>
                                </a>
                            </td>
                            <td>
                                <a class="btn updateViewComment" href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}#comments" data-id="{{ textProperty.id }}" data-object="text-property">
                                    <span class="badge {% if textProperty.comments|length > 0  %}progress-bar-danger {% endif %}">{{ textProperty.comments|length }}</span>
                                </a>
                            </td>
                            <td>
                                {% if textProperty.validationStatus is null %}
                                    <span class="label label-info">
                                    Candidate
                                </span>
                                {% elseif textProperty.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% elseif textProperty.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% elseif textProperty.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <div class="pull-right add-div">
                    <a href="{{ path('text_property_new', {'type': 'additional-note', 'object': 'property', 'objectId': propertyVersion.property.id })}}"
                       class="btn btn-primary pull-right">
                        Add <span class="fa fa-plus-circle"></span>
                    </a>
                </div>
                <h3>Additional notes</h3>
                <table class="table table-striped" id="additional-notes-table">
                    <thead>
                    <tr>
                        <th>Show</th>
                        <th>Notes</th>
                        <th>Language</th>
                        <th>Namespace</th>
                        <th>Edit</th>
                        <th>Comments</th>
                        <th>Validation</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for textProperty in propertyVersion.property.textProperties
                        if textProperty.systemType.id == 12
                        and textProperty.namespaceForVersion.id in namespacesId %}
                        {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        <tr>
                            <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                            <td class="truncated-text">
                                <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            </td>
                            <td>{{ textProperty.languageIsoCode}}</td>
                            <td>{{ textProperty.namespaceForVersion }}</td>
                            <td>
                                <a href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}"
                                   class="btn btn-xs btn-success">
                                    <span class="fa fa-edit"></span>
                                </a>
                            </td>
                            <td>
                                <a class="btn updateViewComment" href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}#comments" data-id="{{ textProperty.id }}" data-object="text-property">
                                    <span class="badge {% if textProperty.comments|length > 0  %}progress-bar-danger {% endif %}">{{ textProperty.comments|length }}</span>
                                </a>
                            </td>
                            <td>
                                {% if textProperty.validationStatus is null %}
                                    <span class="label label-info">
                                    Candidate
                                </span>
                                {% elseif textProperty.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% elseif textProperty.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% elseif textProperty.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                    {{ textProperty.validationStatus }}
                                </span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="identification" class="tab-pane fade">
                {# Test de vérification si cet identifiant existe déjà dans un namespace fermé (il n'est donc plus éditable #}
                {% set isIdentifierExistAndPublished = false %}
                {% for namespace in propertyVersion.property.namespaces %}
                    {% if not namespace.isOngoing %}
                        {% for propertyNamespace in namespace.properties %}
                            {% if propertyNamespace.identifierInNamespace == property.identifierInNamespace %}
                                {% set isIdentifierExistAndPublished = true %}
                            {% endif %}
                        {% endfor %}
                    {% endif %}
                {% endfor %}
                {% if propertyVersion.namespaceForVersion.topLevelNamespace.propertyPrefix is null and not isIdentifierExistAndPublished %}
                    <div id="identifier-form-block">
                        {{ form_start(propertyIdentifierForm) }}
                        {{ form_errors(propertyIdentifierForm) }}
                        <p>{{ form_row(propertyIdentifierForm.identifierInNamespace) }}</p>
                        <button type="submit" class="btn btn-primary" formnovalidate>Save</button>
                        <button type="button" id="identifier-edit-btn-close" class="btn">Close</button>
                        {{ form_end(propertyIdentifierForm) }}
                    </div>
                    <h3 id="identifier-details-block">Identifier : {{ propertyVersion.property.identifierInNamespace }}<a class="btn" id="identifier-edit-btn" href="#identification"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a></h3>
                {% else %}
                    <h3 id="identifier-details-block">Identifier : {{ propertyVersion.property.identifierInNamespace }}</h3>
                {% endif %}

                {% if domainRange is not empty and domainRange.domainId is not null and domainRange.rangeId is not null %}
                    <h3>Domain and range</h3>
                    <div id="domain-range-form-block">
                        {{ form_start(propertyForm) }}
                        <div class="row well well-sm" style="margin: 19px 0;">
                            <div class="col-lg-2">
                                <p class="text-center"><label>Domain</label></p>
                                <p>{{ form_widget(propertyForm.domainVersion) }}</p>
                            </div>
                            <div class="col-lg-2">
                                <p class="text-center"><label>Domain quantifiers</label></p>
                                <div class="row">
                                    <div class="col-md-6" style="padding:0;">{{ form_widget(propertyForm.domainMinQuantifier) }}</div>
                                    <div class="col-md-6" style="padding:0;">{{ form_widget(propertyForm.domainMaxQuantifier) }}</div>
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <p class="text-center"><label>Property</label></p>
                                <p class="text-center">→ {{ propertyVersion.standardLabel }} →</p>
                            </div>
                            <div class="col-lg-2">
                                <p class="text-center"><label>Range quantifiers</label></p>
                                <div col="row">
                                    <div class="col-md-6" style="padding:0;">{{ form_widget(propertyForm.rangeMinQuantifier) }}</div>
                                    <div class="col-md-6" style="padding:0;">{{ form_widget(propertyForm.rangeMaxQuantifier) }}</div>
                                </div>
                            </div>
                            <div class="col-lg-2">
                                <p class="text-center"><label>Range</label></p>
                                <p>{{ form_widget(propertyForm.rangeVersion) }}</p>
                            </div>
                        </div>
                        <button type="submit" class="btn btn-primary" formnovalidate>Save</button>
                        <button type="button" id="domain-range-btn-close" class="btn">Close</button>
                        {{ form_end(propertyForm) }}
                    </div>

                    <p id="domain-range-details-block">
                        {# Initialisation #}
                        {% set isGoodNamespace = true %}
                        {% set route = 'class_show_with_version' %}
                        {% set route_params = {'id': domainRange.domainId,  'namespaceFromUrlId': domainRange.domainNamespaceId } %}

                        {# Vérification #}
                        {% if domainRange.domainNamespaceId not in propertyVersion.namespaceForVersion.selectedNamespacesId %}
                            {% set isGoodNamespace = false %}
                            {% set route = 'namespace_show' %}
                            {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                        {% endif %}

                        <a href="{{ path(route, route_params) }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                            {{ domainRange.domainIdentifier }}</a>
                        →
                        {{ domainRange.propertyIdentifier }}
                        →
                        {# Initialisation #}
                        {% set isGoodNamespace = true %}
                        {% set route = 'class_show_with_version' %}
                        {% set route_params = {'id': domainRange.rangeId,  'namespaceFromUrlId': domainRange.rangeNamespaceId } %}

                        {# Vérification #}
                        {% if domainRange.rangeNamespaceId not in propertyVersion.namespaceForVersion.selectedNamespacesId %}
                            {% set isGoodNamespace = false %}
                            {% set route = 'namespace_show' %}
                            {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                        {% endif %}

                        <a href="{{ path(route, route_params) }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                            {{ domainRange.rangeIdentifier }}</a>

                        {% if propertyVersion.quantifiers is not null %}
                            &nbsp;(Quantifiers {{ propertyVersion.quantifiers }})
                        {% endif %}
                        <a class="btn" id="domain-range-edit-btn" href="#identification"><span class="glyphicon glyphicon-pencil" aria-hidden="true"></span></a>
                    </p>
                {% endif %}
                <div class="pull-right add-div">
                    <a href="{{ path('label_new', {'object': 'property', 'objectId': propertyVersion.property.id })}}"
                       class="btn btn-primary pull-right">
                        Add <span class="fa fa-plus-circle"></span>
                    </a>
                </div>
                <h3>Labels</h3>
                <table class="table table-striped" id="labels-table">
                    <thead>
                    <tr>
                        <th>Label</th>
                        <th>Language</th>
                        <th>Last updated</th>
                        <th>Edit</th>
                        <th>Comments</th>
                        <th>Validation</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for label in propertyVersion.property.labels
                        if label.namespaceForVersion.id in namespacesId %}
                        <tr>
                            <td>
                                <a href="{{ path('label_show', {
                                    'id': label.id
                                }) }}">{{ label.label }} {% if label.inverseLabel != ""%}({{ label.inverseLabel }}){% endif %}</a> {% if label.isStandardLabelForLanguage %}*{% endif %}
                            </td>
                            <td>{{ label.languageIsoCode}}</td>
                            <td>{{ label.modificationTime|date('Y-m-d') }}</td>
                            <td>
                                <a href="{{ path('label_edit', {
                                    'id': label.id
                                }) }}"
                                   class="btn btn-xs btn-success">
                                    <span class="fa fa-edit"></span>
                                </a>
                            </td>
                            <td>
                                <a class="btn updateViewComment" href="{{ path('label_edit', {
                                    'id': label.id
                                }) }}#comments" data-id="{{ label.id }}" data-object="label">
                                    <span class="badge {% if label.comments|length > 0  %}progress-bar-danger {% endif %}">{{ label.comments|length }}</span>
                                </a>
                            </td>
                            <td>
                                {% if label.validationStatus is null %}
                                    <span class="label label-info">
                                    Candidate
                                </span>
                                {% elseif label.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                    {{ label.validationStatus }}
                                </span>
                                {% elseif label.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                    {{ label.validationStatus }}
                                </span>
                                {% elseif label.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                    {{ label.validationStatus }}
                                </span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <p>
                    <span class="glyphicon glyphicon-asterisk" aria-hidden="true"></span>
                    : Standard label for this language
                </p>
            </div>
            <div id="namespaces" class="tab-pane fade">
                <h3>Namespace</h3>
                <table class="table table-striped" id="namespaces-table">
                    <thead>
                    <tr>
                        <th>Namespace</th>
                        <th>Last updated</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for pversion in propertyVersion.property.propertyVersions %}
                        <tr {% if pversion.namespaceForVersion.id == propertyVersion.namespaceForVersion.id %}class="success"{% endif %}>
                            <td>
                                <a href="{{ path('namespace_show', {
                                    'id': pversion.namespaceForVersion.id
                                }) }}">
                                    {{ pversion.namespaceForVersion }}
                                </a>
                            </td>
                            <td>{{ pversion.namespaceForVersion.modificationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="property-hierarchy" class="tab-pane fade">
                {% if is_granted('add_associations', propertyVersion.namespaceForVersion) %}
                    <div class="pull-right add-div">
                        <a href="{{ path('new_parent_property_form', {'childProperty': propertyVersion.property.id}) }}" class="btn btn-primary pull-right">Add <span class="fa fa-plus-circle"></span></a>
                    </div>
                {% endif %}
                <h3>Parent properties
                    {% set tooltipProperty = "rdfs:subpropertyOf the property below" %}
                    {% if propertyVersion.property.childPropertyAssociations|length > 1  %}
                        {% set tooltipProperty = "rdfs:subpropertyOf the properties listed below" %}
                    {% endif %}
                    <a data-toggle="tooltip" data-placement="right" title="{{ propertyVersion }} {{ tooltipProperty }}">
                        <span class="fas fa-info-circle"></span>
                    </a>
                </h3>
                <table class="table table-striped" id="parent-properties-table">
                    <thead>
                    <tr>
                        <th class="text-right">Domain</th>
                        <th></th>
                        <th class="text-center">Property</th>
                        <th></th>
                        <th>Range</th>
                        <th>Justification</th>
                        <th>Relation namespace</th>
                        <th>View details</th>
                        <th>Edit</th>
                        <th>Delete</th>
                        <th>Comments</th>
                        <th>Validation</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for association in propertyVersion.property.childPropertyAssociations
                        if association.namespaceForVersion.id in namespacesId %}
                        <tr>
                            {# Domain #}
                            <td class="text-right small">
                                {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domain is not null %}
                                    {# Initialisation #}
                                    {% set isGoodNamespace = true %}
                                    {% set route = 'class_show_with_version' %}
                                    {% set route_params = {'id': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domain.id,  'namespaceFromUrlId': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainNamespace.id } %}

                                    {# Vérification #}
                                    {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainNamespace.id not in association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).namespaceForVersion.selectedNamespacesId %}
                                        {% set isGoodNamespace = false %}
                                        {% set route = 'namespace_show' %}
                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                    {% endif %}

                                    <a href="{{ path(route, route_params) }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                        {{ association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domain.classVersionForDisplay(association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainNamespace).invertedLabel(true) }}
                                    </a>
                                {% endif %}
                            </td>

                            {# Domain quantifiers #}
                            <td class="small" style="padding-left: 30px;">
                                {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainMinQuantifier is not null and association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainMaxQuantifier is not null %}
                                    {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainMinQuantifier != -1 %}
                                        {% set minQuantifiers = association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainMinQuantifier %}
                                    {% else %}
                                        {% set minQuantifiers = "n" %}
                                    {% endif %}

                                    {% if  association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainMaxQuantifier != -1 %}
                                        {% set maxQuantifiers = association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).domainMaxQuantifier %}
                                    {% else %}
                                        {% set maxQuantifiers = "n" %}
                                    {% endif %}

                                    {{ "(%s,%s)"|format(minQuantifiers,maxQuantifiers) }}
                                {% endif %}
                            </td>

                            {# Property #}
                            <td class="text-center">
                                {# Initialisation #}
                                {% set isGoodNamespace = true %}
                                {% set route = 'property_show_with_version' %}
                                {% set route_params = {'id': association.parentProperty.id,  'namespaceFromUrlId': association.parentPropertyNamespace.id, '_fragment': 'class-hierarchy' } %}

                                {# Vérification #}
                                {% if association.parentPropertyNamespace.id not in propertyVersion.namespaceForVersion.selectedNamespacesId %}
                                    {% set isGoodNamespace = false %}
                                    {% set route = 'namespace_show' %}
                                    {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                {% endif %}

                                <a href="{{ path(route, route_params) }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                    {{ association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).invertedLabel }}
                                </a>
                            </td>

                            {# Range quantifiers #}
                            <td class="small" style="padding-right: 30px;">
                                {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeMinQuantifier is not null and association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeMaxQuantifier is not null %}
                                    {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeMinQuantifier != -1 %}
                                        {% set minQuantifiers = association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeMinQuantifier %}
                                    {% else %}
                                        {% set minQuantifiers = "n" %}
                                    {% endif %}

                                    {% if  association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeMaxQuantifier != -1 %}
                                        {% set maxQuantifiers = association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeMaxQuantifier %}
                                    {% else %}
                                        {% set maxQuantifiers = "n" %}
                                    {% endif %}

                                    {{ "(%s,%s)"|format(minQuantifiers,maxQuantifiers) }}
                                {% endif %}
                            </td>

                            {# Range #}
                            <td class="small">
                                {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).range is not null %}
                                    {# Initialisation #}
                                    {% set isGoodNamespace = true %}
                                    {% set route = 'class_show_with_version' %}
                                    {% set route_params = {'id': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).range.id,  'namespaceFromUrlId': association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeNamespace.id } %}

                                    {# Vérification #}
                                    {% if association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeNamespace.id not in association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).namespaceForVersion.selectedNamespacesId %}
                                        {% set isGoodNamespace = false %}
                                        {% set route = 'namespace_show' %}
                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                    {% endif %}

                                    <a href="{{ path(route, route_params) }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                        {{ association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).range.classVersionForDisplay(association.parentProperty.propertyVersionForDisplay(association.parentPropertyNamespace).rangeNamespace).invertedLabel(true) }}
                                    </a>
                                {% endif %}
                            </td>

                            <td>
                                {% if association.textProperties is not null %}
                                    {% for textProperty in association.textProperties if textProperty.systemType.id == 15 %}
                                        {% if loop.index == 1 %}
                                            <a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="fas fa-eye" aria-hidden="true"></span></a>
                                            {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                                        {% endif %}
                                    {% endfor %}
                                {% endif %}
                            </td>

                            <td>{{ association.namespaceForVersion }}</td>
                            <td>
                                <a href="{{ path('property_association_show', {'id': association.id}) }}"><span class="fa fa-info-circle"></span></a>
                            </td>
                            <td>
                                {% if is_granted('edit', association) %}
                                <a href="{{ path('property_association_edit', {'id': association.id}) }}" class="btn btn-xs btn-success"><span class="fa fa-edit"></span></a>
                                {% endif %}
                            </td>
                            <td>
                                {% if is_granted('delete', association) %}
                                <a href="#property-hierarchy" class="btn btn-xs btn-danger btn-delete-association" data-id="{{ association.id }}" data-type="propertyAssociation"><span class="fa fa-trash-alt"></span></a>
                                {% endif %}
                            </td>
                            <td>
                                <a class="btn updateViewComment" href="{{ path('property_association_show', {
                                    'id': association.id
                                }) }}#comments" data-id="{{ association.id }}" data-object="property-association">
                                    <span class="badge {% if association.comments|length > 0  %}progress-bar-danger {% endif %}">{{ association.comments|length }}</span>
                                </a>
                            </td>
                            <td>
                                {% if association.validationStatus is null %}
                                    <span class="label label-info">
                                    Candidate
                                </span>
                                {% elseif association.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                    {{ association.validationStatus }}
                                </span>
                                {% elseif association.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                    {{ association.validationStatus }}
                                </span>
                                {% elseif association.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                    {{ association.validationStatus }}
                                </span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <h3>Ancestor properties</h3>
                <table class="table table-striped" id="ancestors-table">
                    <thead>
                    <tr>
                        <th class="text-right">Domain</th>
                        <th></th>
                        <th class="text-center">Property</th>
                        <th></th>
                        <th>Range</th>
                        <th>Depth</th>
                        <th>Property namespace</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for ancestor in ancestors|sort %}
                        <tr>
                            <td class="text-right small">
                                {% if ancestor.domainIdentifier is not null %}
                                    <a href="{{ path('class_show_with_version', {
                                        'id': ancestor.has_domain,
                                        'namespaceFromUrlId': ancestor.domainNamespaceId
                                    }) }}">
                                        {% if ancestor.domainStandardLabel == ancestor.domainIdentifier %}
                                            {{ ancestor.domainStandardLabel }}
                                        {% else %}
                                            {{ ancestor.domainStandardLabel }} – {{ ancestor.domainIdentifier }}
                                        {% endif %}
                                    </a>
                                {% endif %}
                            </td>
                            <td class="small" style="padding-left: 30px;">
                                {% if ancestor.domain_instances_min_quantifier is not null and ancestor.domain_instances_max_quantifier is not null %}
                                    {% if ancestor.domain_instances_min_quantifier != -1 %}
                                        {% set minQuantifiers = ancestor.domain_instances_min_quantifier %}
                                    {% else %}
                                        {% set minQuantifiers = "n" %}
                                    {% endif %}

                                    {% if  ancestor.domain_instances_max_quantifier != -1 %}
                                        {% set maxQuantifiers = ancestor.domain_instances_max_quantifier %}
                                    {% else %}
                                        {% set maxQuantifiers = "n" %}
                                    {% endif %}

                                    {{ "(%s,%s)"|format(minQuantifiers,maxQuantifiers) }}
                                {% endif %}
                            </td>
                            <td class="text-center">
                                <a href="{{ path('property_show_with_version', {
                                    'id': ancestor.id,
                                    'namespaceFromUrlId': ancestor.propertyNamespaceId,
                                    '_fragment': 'property-hierarchy'
                                }) }}">
                                    {{ ancestor.identifier }}
                                </a>
                            </td>
                            <td class="small" style="padding-right: 30px;">
                                {% if ancestor.range_instances_min_quantifier is not null and ancestor.range_instances_max_quantifier is not null %}
                                    {% if  ancestor.range_instances_min_quantifier != -1 %}
                                        {% set minQuantifiers = ancestor.range_instances_min_quantifier %}
                                    {% else %}
                                        {% set minQuantifiers = "n" %}
                                    {% endif %}

                                    {% if  ancestor.range_instances_max_quantifier != -1 %}
                                        {% set maxQuantifiers = ancestor.range_instances_max_quantifier %}
                                    {% else %}
                                        {% set maxQuantifiers = "n" %}
                                    {% endif %}

                                    {{ "(%s,%s)"|format(minQuantifiers,maxQuantifiers) }}
                                {% endif %}
                            </td>
                            <td class="small">
                                {% if ancestor.rangeIdentifier is not null %}
                                    <a href="{{ path('class_show_with_version', {
                                        'id': ancestor.has_range,
                                        'namespaceFromUrlId': ancestor.rangeNamespaceId
                                    }) }}">
                                        {% if ancestor.rangeStandardLabel == ancestor.rangeIdentifier %}
                                            {{ ancestor.rangeStandardLabel }}
                                        {% else %}
                                            {{ ancestor.rangeStandardLabel }} – {{ ancestor.rangeIdentifier }}
                                        {% endif %}
                                    </a>
                                {% endif %}
                            </td>
                            <td>{{ ancestor.depth }}</td>
                            <td>{{ ancestor.propertyNamespaceLabel }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <h3>Child and descendant properties</h3>
                <table class="table table-striped" id="descendants-table">
                    <thead>
                    <tr>
                        <th class="text-right">Domain</th>
                        <th></th>
                        <th class="text-center">Property</th>
                        <th></th>
                        <th>Range</th>
                        <th>Depth</th>
                        <th>Property namespace</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for descendant in descendants|sort %}
                        <tr>
                            <td class="text-right small">
                                {% if descendant.domainIdentifier is not null %}
                                    <a href="{{ path('class_show_with_version', {
                                        'id': descendant.has_domain,
                                        'namespaceFromUrlId': descendant.domainNamespaceId
                                    }) }}">
                                        {% if descendant.domainStandardLabel == descendant.domainIdentifier %}
                                            {{ descendant.domainStandardLabel }}
                                        {% else %}
                                            {{ descendant.domainStandardLabel }} – {{ descendant.domainIdentifier }}
                                        {% endif %}
                                    </a>
                                {% endif %}
                            </td>
                            <td class="small" style="padding-left: 30px;">
                                {% if descendant.domain_instances_min_quantifier is not null and descendant.domain_instances_max_quantifier is not null %}
                                    {% if descendant.domain_instances_min_quantifier != -1 %}
                                        {% set minQuantifiers = descendant.domain_instances_min_quantifier %}
                                    {% else %}
                                        {% set minQuantifiers = "n" %}
                                    {% endif %}

                                    {% if  descendant.domain_instances_max_quantifier != -1 %}
                                        {% set maxQuantifiers = descendant.domain_instances_max_quantifier %}
                                    {% else %}
                                        {% set maxQuantifiers = "n" %}
                                    {% endif %}

                                    {{ "(%s,%s)"|format(minQuantifiers,maxQuantifiers) }}
                                {% endif %}
                            </td>
                            <td class="text-center">
                                <a href="{{ path('property_show_with_version', {
                                    'id': descendant.id,
                                    'namespaceFromUrlId': descendant.propertyNamespaceId,
                                    '_fragment': 'property-hierarchy'
                                }) }}">
                                    {{ descendant.identifier }}
                                </a>
                            </td>
                            <td class="small" style="padding-right: 30px;">
                                {% if descendant.range_instances_min_quantifier is not null and descendant.range_instances_max_quantifier is not null %}
                                    {% if  descendant.range_instances_min_quantifier != -1 %}
                                        {% set minQuantifiers = descendant.range_instances_min_quantifier %}
                                    {% else %}
                                        {% set minQuantifiers = "n" %}
                                    {% endif %}

                                    {% if  descendant.range_instances_max_quantifier != -1 %}
                                        {% set maxQuantifiers = descendant.range_instances_max_quantifier %}
                                    {% else %}
                                        {% set maxQuantifiers = "n" %}
                                    {% endif %}

                                    {{ "(%s,%s)"|format(minQuantifiers,maxQuantifiers) }}
                                {% endif %}
                            </td>
                            <td class="small">
                                {% if descendant.rangeIdentifier is not null %}
                                    <a href="{{ path('class_show_with_version', {
                                        'id': descendant.has_range,
                                        'namespaceFromUrlId': descendant.rangeNamespaceId
                                    }) }}">
                                        {% if descendant.rangeStandardLabel == descendant.rangeIdentifier %}
                                            {{ descendant.rangeStandardLabel }}
                                        {% else %}
                                            {{ descendant.rangeStandardLabel }} – {{ descendant.rangeIdentifier }}
                                        {% endif %}
                                    </a>
                                {% endif %}
                            </td>
                            <td>{{ descendant.depth }}</td>
                            <td>{{ descendant.propertyNamespaceLabel }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="relations" class="tab-pane fade">
                {% if is_granted('add_associations', propertyVersion.namespaceForVersion) %}
                    <div class="pull-right add-div">
                        <a href="{{ path('new_entity_association_form', {
                            'object': 'property',
                            'objectId': propertyVersion.property.id}) }}" class="btn btn-primary pull-right">Add <span class="fa fa-plus-circle"></span></a>
                    </div>
                {% endif %}
                <h3>Related properties</h3>
                <table class="table table-striped" id="relations-table">
                    <thead>
                    <tr>
                        <th>Relation</th>
                        <th>Property</th>
                        <th>Justification</th>
                        <th>Relation namespace</th>
                        <th>View details</th>
                        <th>Edit</th>
                        <th>Delete</th>
                        <th>Comments</th>
                        <th>Validation</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for relation in propertyVersion.property.entityAssociations
                        if relation.systemType.id in [18,20]
                        and relation.namespaceForVersion.id in namespacesId %}
                        <tr>
                            <td>{{ relation.systemType }}</td>
                            {% if propertyVersion.property.id == relation.sourceProperty.id %}
                                <td>
                                    {# Initialisation #}
                                    {% set isGoodNamespace = true %}
                                    {% set route = 'property_show_with_version' %}
                                    {% set route_params = {'id': relation.targetProperty.id,  'namespaceFromUrlId': relation.targetNamespaceForVersion.id } %}

                                    {# Vérification #}
                                    {% if relation.targetNamespaceForVersion.id not in relation.namespaceForVersion.selectedNamespacesId %}
                                        {% set isGoodNamespace = false %}
                                        {% set route = 'namespace_show' %}
                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                    {% endif %}

                                    <a href="{{ path(route, route_params) }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                        {{ relation.targetProperty.propertyVersionForDisplay(relation.targetNamespaceForVersion).invertedLabel(true) }}
                                    </a>
                                </td>
                            {% else %}
                                <td>
                                    {# Initialisation #}
                                    {% set isGoodNamespace = true %}
                                    {% set route = 'property_show_with_version' %}
                                    {% set route_params = {'id': relation.sourceProperty.id,  'namespaceFromUrlId': relation.sourceNamespaceForVersion.id } %}

                                    {# Vérification #}
                                    {% if relation.sourceNamespaceForVersion.id not in relation.namespaceForVersion.selectedNamespacesId %}
                                        {% set isGoodNamespace = false %}
                                        {% set route = 'namespace_show' %}
                                        {% set route_params = {'id': propertyVersion.namespaceForVersion.id,  '_fragment': 'mismatches' } %}
                                    {% endif %}

                                    <a href="{{ path(route, route_params) }}" {% if not isGoodNamespace %}class="text-danger"{% endif %}>
                                        {{ relation.sourceProperty.propertyVersionForDisplay(relation.sourceNamespaceForVersion).invertedLabel(true) }}
                                    </a>
                                </td>
                            {% endif %}
                            <td>
                                {% if relation.textProperties is not null %}
                                    {% for textProperty in relation.textProperties if textProperty.systemType.id == 15 %}
                                        {% if loop.index == 1 %}
                                            <a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="fas fa-eye" aria-hidden="true"></span></a>
                                            {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                                        {% endif %}
                                    {% endfor %}
                                {% endif %}
                            </td>
                            <td>{{ relation.namespaceForVersion.topLevelNamespace }}</td>
                            <td>
                                {% if propertyVersion.property.id == relation.sourceProperty.id %}
                                    <a href="{{ path('entity_association_show', {
                                        'id': relation.id
                                    }) }}">
                                        <span class="fa fa-info-circle"></span>
                                    </a>
                                {% else %}
                                    <a href="{{ path('entity_association_inverse_show', {
                                        'id': relation.id
                                    }) }}">
                                        <span class="fa fa-info-circle"></span>
                                    </a>
                                {% endif %}
                            </td>
                            <td>
                                {% if is_granted('edit', relation) %}
                                    {% if propertyVersion.property.id == relation.sourceProperty.id %}
                                        <a href="{{ path('entity_association_edit', {
                                            'id': relation.id
                                        }) }}" class="btn btn-xs btn-success">
                                            <span class="fa fa-edit"></span>
                                        </a>
                                    {% else %}
                                        <a href="{{ path('entity_association_inverse_edit', {
                                            'id': relation.id
                                        }) }}" class="btn btn-xs btn-success">
                                            <span class="fa fa-edit"></span>
                                        </a>
                                    {% endif %}
                                {% endif %}
                            </td>
                            <td>
                                {% if is_granted('delete', relation) %}
                                <a href="#relations" class="btn btn-xs btn-danger btn-delete-association" data-id="{{ relation.id }}" data-type="entityAssociation"><span class="fa fa-trash-alt"></span></a>
                                {% endif %}
                            </td>
                            <td>
                                {% if propertyVersion.property.id == relation.sourceProperty.id %}
                                    <a class="btn updateViewComment" href="{{ path('entity_association_edit', {
                                        'id': relation.id
                                    }) }}#comments" data-id="{{ relation.id }}" data-object="entity-association">
                                        <span class="badge {% if relation.comments|length > 0  %}progress-bar-danger {% endif %}">{{ relation.comments|length }}</span>
                                    </a>
                                {% else %}
                                    <a class="btn updateViewComment" href="{{ path('entity_association_inverse_edit', {
                                        'id': relation.id
                                    }) }}#comments" data-id="{{ relation.id }}" data-object="entity-association">
                                        <span class="badge {% if relation.comments|length > 0  %}progress-bar-danger {% endif %}">{{ relation.comments|length }}</span>
                                    </a>
                                {% endif %}
                            </td>
                            <td>
                                {% if relation.validationStatus is null %}
                                    <span class="label label-info">
                                        Candidate
                                    </span>
                                {% elseif relation.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                        {{ relation.validationStatus }}
                                    </span>
                                {% elseif relation.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                        {{ relation.validationStatus }}
                                    </span>
                                {% elseif relation.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                        {{ relation.validationStatus }}
                                    </span>
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="profiles" class="tab-pane fade">
                <h3>Profiles using this property</h3>
                <table class="table table-striped" id="profiles-table">
                    <thead>
                    <tr>
                        <th>Label</th>
                        <th>Start date</th>
                        <th>End date</th>
                        <th>Last updated</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% set profilesAssociated = [] %}
                    {% for profileAssociation in propertyVersion.property.profileAssociations
                        if profileAssociation.systemType.id == 5
                        and profileAssociation.profile not in profilesAssociated %}
                        {% set profilesAssociated = [profileAssociation.profile]|merge(profilesAssociated) %}
                    {% endfor %}
                    {% for profile in profilesAssociated %}
                        <tr>
                            <td>
                                <a href="{{ path('profile_show', {
                                    'id': profile.id
                                }) }}">
                                    {{ profile.standardLabel }}
                                </a>
                            </td>
                            <td>{{ profile.startDate is empty ? '' : profile.startDate|date('Y-m-d') }}</td>
                            <td>{{ profile.endDate is empty ? '' : profile.endDate|date('Y-m-d') }}</td>
                            <td>{{ profile.modificationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="comments" class="tab-pane fade">
                <h3>Comments</h3>
                <div class="comment-box js-user-info" data-fullname="{{ app.user }}">
                    <div class="action-box">
                        {% set commentsProperty = propertyVersion.property.comments %}
                        {% set commentsPropertyVersion = commentsProperty|filter(commentsProperty => commentsProperty.namespaceForVersion.id == propertyVersion.namespaceForVersion.id) %}
                        {% if commentsPropertyVersion is empty %}
                            <p id="comment-not-found"><em>No comment found.</em></p>
                        {% endif %}
                        <ul id="comments-list" class="comments-list">
                            {% for comment in commentsPropertyVersion %}
                                <li>
                                    <div class="comment-text">
                                        <p><strong><a href="#">{{ comment.creator.fullName }}</a></strong></p>
                                        <p>{{ comment.comment }}</p>
                                        <span class="date sub-comment-text">on {{ comment.creationTime|date() }}</span>
                                    </div>
                                </li>
                            {% endfor %}
                        </ul>

                        {% if app.user %}
                            <div class="new-comment-form" id="new-comment-form">
                                {{ render(controller('AppBundle:Comment:new', {'object' : 'property-version', 'objectId' : propertyVersion.id})) }}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js"></script>
    <script>
        $(document).ready(function() {
            $('#namespaces-table').DataTable();
            $('#labels-table').DataTable();
            $('#scope-notes-table').DataTable({
                "order": [[5, 'desc']],
                "columnDefs": [
                    {"width": "1%", "orderable": false, "targets": 0},
                    {"width": "50%", "targets": 1},
                    {"width": "1%", "targets": 2},
                    {"width": "1%", "targets": 4},
                    {"width": "1%", "targets": 5},
                    {"width": "1%", "targets": 6}
                ],
                "autoWidth": false
            });
            $('#examples-table').DataTable({
                "order": [[5, 'desc']],
                "columnDefs": [
                    {"width": "1%", "orderable": false, "targets": 0},
                    {"width": "50%", "targets": 1},
                    {"width": "1%", "targets": 2},
                    {"width": "1%", "targets": 4},
                    {"width": "1%", "targets": 5},
                    {"width": "1%", "targets": 6}
                ],
                "autoWidth": false
            });
            $('#additional-notes-table').DataTable({
                "order": [[5, 'desc']],
                "columnDefs": [
                    {"width": "1%", "orderable": false, "targets": 0},
                    {"width": "50%", "targets": 1},
                    {"width": "1%", "targets": 2},
                    {"width": "1%", "targets": 4},
                    {"width": "1%", "targets": 5},
                    {"width": "1%", "targets": 6}
                ],
                "autoWidth": false
            });
            $('#parent-properties-table').DataTable();
            $('#ancestors-table').DataTable({
                "order": [[ 5, "asc" ]]
            });
            $('#descendants-table').DataTable({
                "order": [[ 5, "asc" ]]
            });
            $('#relations-table').DataTable();
            $('#profiles-table').DataTable();

            $('#property_edit_form_domainVersion').select2({
                width: '100%',
                sorter: function(data) {
                    /* Sort data using lowercase comparison */
                    return data.sort(function (a, b) {
                        a = a.text.toLowerCase();
                        b = b.text.toLowerCase();
                        if (a > b) {
                            return 1;
                        } else if (a < b) {
                            return -1;
                        }
                        return 0;
                    });
                }
            });

            $('#property_edit_form_rangeVersion').select2({
                width: '100%',
                sorter: function(data) {
                    /* Sort data using lowercase comparison */
                    return data.sort(function (a, b) {
                        a = a.text.toLowerCase();
                        b = b.text.toLowerCase();
                        if (a > b) {
                            return 1;
                        } else if (a < b) {
                            return -1;
                        }
                        return 0;
                    });
                }
            });
            $('#domain-range-form-block').hide(0);

            $('#domain-range-btn-close').click(function(){
                $('#domain-range-details-block').show(200);
                $('#domain-range-form-block').hide(200);
            });

            $('#domain-range-edit-btn').click(function(){
                $('#domain-range-details-block').hide(200);
                $('#domain-range-form-block').show(200);
            });

            {% if not propertyIdentifierForm.vars.valid %}
            $('#identifier-details-block').hide(0);
            {% else %}
            $('#identifier-form-block').hide(0);
            {% endif %}

            $('#identifier-edit-btn').click(function(){
                $('#identifier-details-block').hide(200);
                $('#identifier-form-block').show(200);
            });

            $('#identifier-edit-btn-close').click(function(){
                $('#identifier-details-block').show(200);
                $('#identifier-form-block').hide(200);
            });

            $('[data-toggle="tooltip"]').tooltip();

            $('a.updateViewComment').on('click', function () {
                var selectedObject = $(this).data("object");
                var selectedValue = $(this).data("id");
                var url = '{{ path("viewed_by_json", {'object': 'selectedObject', 'objectId': 'selectedValue'}) }}';
                url = url.replace("selectedValue", selectedValue);
                url = url.replace("selectedObject", selectedObject);
                $.ajax({
                    url: url,
                    type: 'GET',
                    dataType: 'json',
                    statusCode: {
                        204: function () {}
                    }
                });
            });
        } );
        $(document).on("click", ".btn-delete-association", function(){
            var associationId = $(this).data("id");
            var associationType = $(this).data("type");
            bootbox.confirm({
                message: "You are about to delete a relation between two properties. This operation cannot be undone. Do you wish to proceed?",
                title: '<i class="fas fa-exclamation-triangle"></i> Warning',
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if(result){
                        if(associationType == "propertyAssociation")
                        {
                            var url = '{{ path("property_association_delete", {'id' : 'associationId'}) }}';
                        }
                        if(associationType == "entityAssociation")
                        {
                            var url = '{{ path("entity_association_delete", {'id' : 'associationId'}) }}';
                        }
                        url = url.replace("associationId", associationId);
                        $.ajax({
                            url: url,
                            type: 'DELETE',
                            dataType: 'json',
                            success:function(data){
                            },
                            statusCode: {
                                204: function () {
                                    window.location.reload();
                                }
                            }
                        });
                    }
                }
            });
        });
    </script>
    {% include 'comment/js-bock.html.twig'  with {'objectType': 'property-version', 'objectId' : propertyVersion.id  } %}

{% endblock %}
