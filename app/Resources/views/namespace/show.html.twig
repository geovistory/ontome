{% extends 'base.html.twig' %}

{% block title %}{{ namespace.namespaceURI }}{% endblock %}

{% block body %}

    <div class="container">
        <h2 class="class-name">
            {{ namespace }} {% if namespace.isTopLevelNamespace %}<span class="label label-default" style="font-size: 12px; vertical-align: middle;">Root</span>{% endif %}
            <span class="pull-right">
                {% if is_granted('edit', namespace) %}
                    <a href="{{ path('namespace_edit', {
                                id: namespace.id
                            }) }}"
                       class="btn btn-success btn-edit">
                        <i class="fa fa-edit"></i>
                    </a>
                {% endif %}
                {% if ((not namespace.isTopLevelNamespace and not namespace.isOngoing) or (namespace.isOngoing and is_granted('edit', namespace))) %}
                    <a  href="{{ path('api_classes_and_properties_by_namespace_xml', {
                        namespace: namespace.id
                    }) }}"
                        class="btn btn-primary"
                        download="namespace-{{ namespace.standardLabel }}.rdf">
                        <i class="fas fa-code"></i> OWL-RDF
                    </a>
                    <a  href="{{ path('namespace_document', {
                        namespace: namespace.id
                    }) }}"
                        class="btn btn-primary">
                    <i class="fas fa-file-alt"></i></i> DOCX
                </a>
                {% endif %}
            </span>
        </h2>
        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#summary">Summary</a></li>
            <li><a data-toggle="tab" href="#identification">Identification</a></li>
            <li><a data-toggle="tab" href="#definition">Definition</a></li>
            <li><a data-toggle="tab" href="#namespace-hierarchy">Versions</a></li>
            {% if not namespace.isTopLevelNamespace %}
            <li><a data-toggle="tab" href="#classes">Classes</a></li>
            <li><a data-toggle="tab" href="#properties">Properties</a></li>
            <li><a data-toggle="tab" href="#relations">Relations</a></li>
            <li><a data-toggle="tab" href="#graph">Graph</a></li>
            {% endif %}
            <li><a data-toggle="tab" href="#comments" class="updateViewComment" data-id="{{ namespace.id }}" data-object="namespace">Comments</a></li>
            {% if not namespace.isTopLevelNamespace %}
                {% set hasMismatches = false %}
                {% for classAssociation in namespace.classAssociations if classAssociation.parentClassNamespace.id not in namespace.selectedNamespacesId or classAssociation.childClassNamespace.id not in namespace.selectedNamespacesId %}{% set hasMismatches = true %}{% endfor %}
                {% for propertyAssociation in namespace.propertyAssociations if propertyAssociation.parentPropertyNamespace.id not in namespace.selectedNamespacesId or propertyAssociation.childPropertyNamespace.id not in namespace.selectedNamespacesId %}{% set hasMismatches = true %}{% endfor %}
                {% for property in namespace.properties if property.propertyVersionForDisplay(namespace).domainNamespace is not null and property.propertyVersionForDisplay(namespace).domainNamespace.id not in namespace.selectedNamespacesId or property.propertyVersionForDisplay(namespace).rangeNamespace is not null and property.propertyVersionForDisplay(namespace).rangeNamespace.id not in namespace.selectedNamespacesId %}{% set hasMismatches = true %}{% endfor %}
                {% for entityAssociation in namespace.entityAssociations if entityAssociation.sourceNamespaceForVersion.id not in namespace.selectedNamespacesId or entityAssociation.targetNamespaceForVersion.id not in namespace.selectedNamespacesId %}{% set hasMismatches = true %}{% endfor %}
                {% if hasMismatches %}
                    <li><a data-toggle="tab" href="#mismatches" class="text-danger"><i class="fas fa-exclamation-triangle"></i> Mismatches</a></li>
                {% endif %}
            {% endif %}
        </ul>

        <div class="tab-content">
            <div id="summary" class="tab-pane fade in active">
                <h3>{{ namespace }}</h3>
                <div class="container">
                    {% if not namespace.isTopLevelNamespace %}
                        {% if hasMismatches %}
                        <div class="row">
                            <div class="col-lg-2">
                                <p class="text-danger"><i class="fas fa-exclamation-triangle"></i> Warning:</p>
                            </div>
                            <div class="col-lg-10">
                                <p class="text-danger">This namespace has mismatched relations due to a misconfiguration of your reference spaces. See <a data-toggle="tab" href="#mismatches">'Mismatches"</a> tab.</p>
                            </div>
                        </div>
                        {% endif %}
                    {% endif %}
                    <div class="row">
                        <div class="col-lg-2">
                            <p>Description:</p>
                        </div>
                        <div class="col-lg-10">
                            {% set description, break = null, false %}
                            {% for textProperty in namespace.textProperties if textProperty.systemType.id == 16 %}
                                {% if not break %}
                                    {% if textProperty.languageIsoCode == 'en' %}
                                        {% set break = true %}
                                        {% set description = textProperty.textProperty %}
                                    {% else %}
                                        {% if description == null %}
                                            {% set description = textProperty.textProperty %}
                                        {% endif %}
                                    {% endif %}
                                {% endif %}
                            {% endfor %}

                            {% if description is not null %}
                                {{ description|raw }}
                            {% else %}
                                <p><i>No description yet.</i></p>
                            {% endif %}
                        </div>
                    </div>
                    {% if not namespace.isTopLevelNamespace %}
                    <div class="row">
                        <div class="col-lg-2">
                            <p>Status:</p>
                        </div>
                        <div class="col-lg-10">
                            {% if namespace.isOngoing %}
                                Ongoing
                            {% endif %}
                            {% if (namespace.publishedAt is not null and namespace.deprecatedAt is null) or not namespace.isOngoing %}
                                Published
                            {% endif %}
                            {% if namespace.deprecatedAt is not null %}
                                Deprecated
                            {% endif %}
                        </div>
                    </div>
                    {% endif %}
                    {% if namespace.directReferencedNamespaces|length > 0 %}
                    <div class="row">
                        <div class="col-lg-2">
                            <p>Reference namespace{% if namespace.directReferencedNamespaces|length > 1 %}s{% endif %}:</p>
                        </div>
                        <div class="col-lg-10">
                        {% for referencedNamespace in namespace.allReferencedNamespaces %}
                            <p><a href="{{ path('namespace_show', {
                                    'id': referencedNamespace.id
                                }) }}">
                                    {{ referencedNamespace }}
                                </a>
                            </p>
                        {% endfor %}
                        </div>
                    </div>
                    {% endif %}
                    {% if not namespace.isTopLevelNamespace %}
                        <div class="row">
                            <div class="col-lg-2">
                                <p>Contributors:</p>
                            </div>
                            <div class="col-lg-10">
                                {% set contributors, break = null, false %}
                                {% for textProperty in namespace.textProperties if textProperty.systemType.id == 2 %}
                                    {% if not break %}
                                        {% if textProperty.languageIsoCode == 'en' %}
                                            {% set break = true %}
                                            {% set contributors = textProperty.textProperty %}
                                        {% else %}
                                            {% if contributors == null %}
                                                {% set contributors = textProperty.textProperty %}
                                            {% endif %}
                                        {% endif %}
                                    {% endif %}
                                {% endfor %}

                                {% if contributors is not null %}
                                    {{ contributors|raw }}
                                {% else %}
                                    <p><i>No contributors yet.</i></p>
                                {% endif %}
                            </div>
                        </div>
                        {% if not namespace.isOngoing %}
                            <div class="row">
                                <div class="col-lg-2">
                                    <p>Version:</p>
                                </div>
                                <div class="col-lg-10">
                                    {% set versionInfo, break = null, false %}
                                    {% for textProperty in namespace.textProperties if textProperty.systemType.id == 31 %}
                                        {% if not break %}
                                            {% if textProperty.languageIsoCode == 'en' %}
                                                {% set break = true %}
                                                {% set versionInfo = textProperty.textProperty %}
                                            {% else %}
                                                {% if versionInfo == null %}
                                                    {% set versionInfo = textProperty.textProperty %}
                                                {% endif %}
                                            {% endif %}
                                        {% endif %}
                                    {% endfor %}

                                    {% if versionInfo is not null %}
                                        {{ versionInfo|raw }}
                                    {% else %}
                                        <p><i>No version set yet.</i></p>
                                    {% endif %}
                                </div>
                            </div>
                        {% endif %}
                    {% endif %}
                </div>
            </div>
            <div id="definition" class="tab-pane fade">
                <h3>Description</h3>
                <table class="table table-striped" id="descriptions-table">
                    <thead>
                    <tr>
                        <th>Show</th>
                        <th>Description</th>
                        <th>Language</th>
                        <th>Namespace</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for textProperty in namespace.textProperties if textProperty.systemType.id == 16 %}
                    {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        <tr>
                            <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                            <td class="truncated-text">
                                <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            </td>
                            <td>{{ textProperty.languageIsoCode}}</td>
                            <td>WIP</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                {% if not namespace.isTopLevelNamespace %}
                    <h3>Contributors</h3>
                    {% set contributors, break = null, false %}
                    {% for textProperty in namespace.textProperties if textProperty.systemType.id == 2 %}
                        {% if not break %}
                            {% if textProperty.languageIsoCode == 'en' %}
                                {% set break = true %}
                                {% set contributors = textProperty.textProperty %}
                            {% else %}
                                {% if contributors == null %}
                                    {% set contributors = textProperty.textProperty %}
                                {% endif %}
                            {% endif %}
                        {% endif %}
                    {% endfor %}

                    {% if contributors is not null %}
                        {{ contributors|raw }}
                    {% else %}
                        <p><i>No contributors yet.</i></p>
                    {% endif %}
                {% endif %}
                <h3>Additional notes</h3>
                <table class="table table-striped" id="additional-notes-table">
                    <thead>
                    <tr>
                        <th>Show</th>
                        <th>Notes</th>
                        <th>Language</th>
                        <th>Namespace</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for textProperty in namespace.textProperties if textProperty.systemType.id == 12 %}
                    {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        <tr>
                            <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                            <td class="truncated-text">
                                <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            </td>
                            <td>{{ textProperty.languageIsoCode}}</td>
                            <td>WIP</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="identification" class="tab-pane fade">
                <h3>Identification</h3>
                <p>
                    {% if namespace.topLevelNamespace.isExternalNamespace %}
                        URI: <strong><a>{{ namespace.namespaceURI }}</a></strong>
                    {% else %}
                        Internal URI: <strong><a>{{ namespace.topLevelNamespace.namespaceURI }}</a></strong>
                    {% endif %}
                </p>
                {% if namespace.projectForTopLevelNamespace is not null %}
                <p>
                    Project of belonging: <a href="{{ path('project_show', {
                                'id': namespace.projectForTopLevelNamespace.id
                            }) }}"
                                target="_blank">{{ namespace.projectForTopLevelNamespace }}
                            </a>
                </p>
                {% endif %}
                {% if namespace.isTopLevelNamespace %}
                <p>Root namespace prefix: {{ namespace.rootNamespacePrefix }}</p>
                {% endif %}
                {% if namespace.isTopLevelNamespace == false %}
                    {% if namespace.isOngoing %}
                        <p>This namespace is ongoing and can be modified at any time. It is not advisable to use its classes and properties.</p>
                    {% else %}
                        {% set txtpVersion, break = null, false %}
                        {% for textProperty in namespace.textProperties if textProperty.systemType.id == 31 %}
                            {% if not break %}
                                {% if textProperty.languageIsoCode == 'en' %}
                                    {% set break = true %}
                                    {% set txtpVersion = textProperty %}
                                {% else %}
                                    {% if txtpVersion == null %}
                                        {% set txtpVersion = textProperty %}
                                    {% endif %}
                                {% endif %}
                            {% endif %}
                        {% endfor %}
                        <h4>Version info</h4>
                        {% if txtpVersion is not null %}
                            {{ txtpVersion.textProperty|raw }}
                        {% else %}
                            <p><i>No version set yet.</i></p>
                        {% endif %}
                    {% endif %}
                    {% if namespace.publishedAt is not null %}
                        <p>Namespace published and available since: {{ namespace.publishedAt|date('Y-m-d') }}</p>
                    {% endif %}
                {% else %}
                    <p>This namespace is a root namespace. Find all its versions in the <a href="#namespace-hierarchy" onclick="window.location = '{{ path('namespace_show', {'id': namespace.id}) }}#namespace-hierarchy';window.location.reload()">Versions tab</a>.</p>
                {% endif %}
                {% if not namespace.isTopLevelNamespace %}
                    <h3 id="titleReferenceNamespace">Namespace{% if namespace.allReferencedNamespaces|length > 1 %}s{% endif %} to which this ongoing namespace refers</h3>
                        <table class="table table-striped" id="reference-namespaces-table">
                            <thead>
                            <tr>
                                <th>Namespace</th>
                            </tr>
                            </thead>
                            <tbody>
                            {% for referencedNamespace in namespace.allReferencedNamespaces %}
                                <tr>
                                    <td>
                                        <a href="{{ path('namespace_show', {
                                            'id': referencedNamespace.id
                                        }) }}">
                                            {{ referencedNamespace }}
                                        </a>
                                        {% if referencedNamespace not in namespace.directReferencedNamespaces %}*{% endif %}
                                    </td>
                                </tr>
                            {% endfor %}
                            </tbody>
                        </table>
                        {% if namespace.allReferencedNamespaces|length != namespace.directReferencedNamespaces|length %}
                            <p>* <span class="small">Reference namespace of a selected namespace (automatically added)</span></p>
                        {% endif %}
                {% endif %}

                <h3>Labels</h3>
                <table class="table table-striped" id="labels-table">
                    <thead>
                    <tr>
                        <th>Label</th>
                        <th>Language</th>
                        <th>Last updated</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for label in namespace.labels %}
                        <tr>
                            <td>
                                <a href="{{ path('label_show', {
                                    'id': label.id
                                }) }}">
                                    {{ label.label }}
                                </a> {% if label.isStandardLabelForLanguage %}*{% endif %}
                            </td>
                            <td>{{ label.languageIsoCode}}</td>
                            <td>{{ label.modificationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <p>* : Standard label for this language</p>
            </div>
            <div id="namespace-hierarchy" class="tab-pane fade">
                <h3>Versions</h3>
                {% if namespace.isTopLevelNamespace %}
                    <p>{{ namespace.standardLabel }} is a <b>root namespace</b>.</p>
                <h3>Versions of this namespace</h3>
                <table class="table table-striped" id="child-namespaces-table">
                    <thead>
                    <tr>
                        <th>PublishedAt</th>
                        <th>Namespace</th>
                        <th>URI</th>
                        <th>Last updated</th>
                        {% if app.user.id is defined %}
                        <th>Current namespace</th>
                        {% endif %}
                    </tr>
                    </thead>
                    <tbody>
                    {% for childNamespace in namespace.childVersions %}
                        <tr {% if is_granted('edit', childNamespace) and childNamespace.isOngoing %}class="success"{% endif %}>
                            <td>{{ childNamespace.publishedAt|date('Y-m-d H-i:s') }}</td>
                            <td>
                                <a href="{{ path('namespace_show', {
                                    'id': childNamespace.id,
                                    '_fragment': 'namespace-hierarchy'
                                }) }}">
                                    {{ childNamespace.standardLabel }}
                                </a>
                            </td>
                            <td>{{ childNamespace.displayURI }}</td>
                            <td>{{ childNamespace.modificationTime|date('Y-m-d') }}</td>
                            {% if app.user.id is defined %}
                            <td>
                                {% set isEnabled = false %}
                                {% for upa in app.user.userProjectAssociations if upa.project == app.user.currentActiveProject %}
                                    {% for eupa in upa.entityUserProjectAssociations if eupa.systemType.id == 25 %}
                                        {% if eupa.namespace == childNamespace %}
                                            {% set isEnabled = true %}
                                        {% elseif eupa.namespace is not null %}
                                            {% if eupa.namespace.referencedNamespaceAssociations is not empty %}
                                                {% for referencedNamespaceAssociation in eupa.namespace.referencedNamespaceAssociations %}
                                                    {% if referencedNamespaceAssociation.referencedNamespace == childNamespace %}
                                                        {% set isEnabled = true %}
                                                    {% endif %}
                                                {% endfor %}
                                            {% endif %}
                                        {% endif %}
                                    {% endfor %}
                                {% endfor %}
                                <a href="{{ path('user_show', {'id': app.user.id, '_fragment': 'my-current-namespaces'}) }}">{% if isEnabled %}Yes{% else %}No{% endif %}</a>
                            </td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                {% else %}
                    <p>Root namespace: <a href="{{ path('namespace_show', {
                            'id': namespace.topLevelNamespace.id,
                            '_fragment':'namespace-hierarchy'
                        }) }}">
                            {{ namespace.topLevelNamespace.standardLabel }}
                        </a>
                    </p>
                    <p>Root namespace prefix: {{ namespace.topLevelNamespace.rootNamespacePrefix }}</p>
                {% endif %}
            </div>
            <div id="classes" class="tab-pane fade">
                <h3>Classes</h3>
                <table class="table table-striped" id="classes-table">
                    <thead>
                    <tr>
                        <th>Identifier</th>
                        <th>Class</th>
                        <th>Last updated</th>
                        {% if namespace.isOngoing %}
                        <th>Validation status</th>
                        {% endif %}
                    </tr>
                    </thead>
                    <tbody>
                    {% for classVersion in namespace.classVersions %}
                        <tr>
                            <td>{{ classVersion.class.identifierInNamespace }}</td>
                            <td>
                                <a href="{{ path('class_show_with_version', {
                                    'id': classVersion.class.id,
                                    'namespaceFromUrlId': classVersion.namespaceForVersion.id
                                }) }}">
                                    {{ classVersion.standardLabel }}
                                </a>
                            </td>
                            <td>{{ classVersion.class.modificationTime|date('Y-m-d') }}</td>
                            {% if namespace.isOngoing %}
                            <td>
                                {% if classVersion.validationStatus is null %}
                                    <span class="label label-info">
                                    Candidate
                                </span>
                                {% elseif classVersion.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                    {{ classVersion.validationStatus }}
                                </span>
                                {% elseif classVersion.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                    {{ classVersion.validationStatus }}
                                </span>
                                {% elseif classVersion.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                    {{ classVersion.validationStatus }}
                                </span>
                                {% endif %}
                            </td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>

            </div>
            <div id="properties" class="tab-pane fade">
                <h3>Properties</h3>
                <table class="table table-striped" id="properties-table">
                    <thead>
                    <tr>
                        <th class="text-right">Domain</th>
                        <th></th>
                        <th>Identifier</th>
                        <th class="text-center">Property</th>
                        <th></th>
                        <th>Range</th>
                        <th>Last updated</th>
                        {% if namespace.isOngoing %}
                        <th>Validation status</th>
                        {% endif %}
                    </tr>
                    </thead>
                    <tbody>
                    {% for propertyVersion in namespace.propertyVersions %}
                        <tr>
                            <td class="text-right small">
                                {% if propertyVersion.domain is not null and propertyVersion.domainNamespace is not null %}
                                <a href="{{ path('class_show_with_version', {
                                    'id': propertyVersion.domain.id,
                                    'namespaceFromUrlId': propertyVersion.domainNamespace.id
                                    }) }}">
                                    {{ propertyVersion.domain.classVersionForDisplay(propertyVersion.domainNamespace) }}
                                </a>
                                {% endif %}
                            </td>
                            <td class="small" style="padding-left: 30px;">
                                {% if propertyVersion.domainMinQuantifier is not null and propertyVersion.domainMaxQuantifier is not null %}
                                    ({% if  propertyVersion.domainMinQuantifier != -1 %}{{ propertyVersion.domainMinQuantifier }}{% else %}n{% endif %},{% if  propertyVersion.domainMaxQuantifier != -1 %}{{ propertyVersion.domainMaxQuantifier }}{% else %}n{% endif %})
                                {% endif %}
                            </td>
                            <td>{{ propertyVersion.property.identifierInNamespace }}</td>
                            <td class="text-center">
                                <a href="{{ path('property_show_with_version', {
                                    'id': propertyVersion.property.id,
                                    'namespaceFromUrlId': propertyVersion.namespaceForVersion.id
                                }) }}">
                                    {{ propertyVersion.standardLabel }}
                                </a>
                            </td>
                            <td class="small" style="padding-right: 30px;">
                                {% if propertyVersion.rangeMinQuantifier is not null and propertyVersion.rangeMaxQuantifier is not null %}
                                    ({% if  propertyVersion.rangeMinQuantifier != -1 %}{{ propertyVersion.rangeMinQuantifier }}{% else %}n{% endif %},{% if  propertyVersion.rangeMaxQuantifier != -1 %}{{ propertyVersion.rangeMaxQuantifier }}{% else %}n{% endif %})
                                {% endif %}
                            </td>
                            <td class="small">
                                {% if propertyVersion.range is not null and propertyVersion.rangeNamespace is not null %}
                                    <a href="{{ path('class_show_with_version', {
                                        'id': propertyVersion.range.id,
                                        'namespaceFromUrlId': propertyVersion.rangeNamespace.id
                                    }) }}">
                                        {{ propertyVersion.range.classVersionForDisplay(propertyVersion.rangeNamespace) }}
                                    </a>
                                {% endif %}
                            </td>
                            <td>{{ propertyVersion.modificationTime|date('Y-m-d') }}</td>
                            {% if namespace.isOngoing %}
                            <td>
                                {% if propertyVersion.validationStatus is null %}
                                    <span class="label label-info">
                                    Candidate
                                </span>
                                {% elseif propertyVersion.validationStatus.id == 26  %}
                                    <span class="label label-success">
                                    {{ propertyVersion.validationStatus }}
                                </span>
                                {% elseif propertyVersion.validationStatus.id == 27  %}
                                    <span class="label label-danger">
                                    {{ propertyVersion.validationStatus }}
                                </span>
                                {% elseif propertyVersion.validationStatus.id == 28  %}
                                    <span class="label label-warning">
                                    {{ propertyVersion.validationStatus }}
                                </span>
                                {% endif %}
                            </td>
                            {% endif %}
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="relations" class="tab-pane fade">
                <h3>Relations</h3>
                <h4>Filter by</h4>
                <div class="form-group">
                    <div class="btn-group" id="btns-choose-entity-relations">
                        <button type="button" class="btn btn-default" value="ClassesRelation">Classes relations</button>
                        <button type="button" class="btn btn-default" value="PropertiesRelation">Properties relations</button>
                        <button type="button" class="btn btn-primary" value="">Both</button>
                    </div>
                </div>
                <div class="form-group">
                    <div class="btn-group" id="btns-choose-type-relations">
                        <button type="button" class="btn btn-default" value="HierarchyAssociation">Hierarchy</button>
                        <button type="button" class="btn btn-default" value="OtherRelation">Other relations</button>
                        <button type="button" class="btn btn-primary" value="">Both</button>
                    </div>
                </div>
                <table class="table table-striped" id="relations-table">
                    <thead>
                    <tr>
                        <th>Source</th>
                        <th>Relation</th>
                        <th>Target</th>
                        <th>Last updated</th>
                        <th>Type</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for classAssociation in namespace.classAssociations %}
                        <tr>
                            <td>{{ classAssociation.childClass.classVersionForDisplay(classAssociation.childClassNamespace) }}</td>
                            <td>
                                <a href="{{ path('class_show_with_version', {
                                    'id': classAssociation.childClass.id,
                                    'namespaceFromUrlId': classAssociation.childClassNamespace.id,
                                    '_fragment':'class-hierarchy'
                                }) }}">
                                    rdfs:subClassOf
                                </a>
                            </td>
                            <td>{{ classAssociation.parentClass.classVersionForDisplay(classAssociation.parentClassNamespace) }}</td>
                            <td>{{ classAssociation.modificationTime|date('Y-m-d') }}</td>
                            <td>ClassesRelation-HierarchyAssociation</td>
                        </tr>
                    {% endfor %}
                    {% for propertyAssociation in namespace.propertyAssociations %}
                        <tr>
                            <td>{{ propertyAssociation.childProperty.propertyVersionForDisplay(propertyAssociation.childPropertyNamespace) }}</td>
                            <td>
                                <a href="{{ path('property_show_with_version', {
                                    'id': propertyAssociation.childProperty.id,
                                    'namespaceFromUrlId': propertyAssociation.childPropertyNamespace.id,
                                    '_fragment':'property-hierarchy'
                                }) }}">
                                    rdfs:subPropertyOf
                                </a>
                            </td>
                            <td>{{ propertyAssociation.parentProperty.propertyVersionForDisplay(propertyAssociation.parentPropertyNamespace) }}</td>
                            <td>{{ propertyAssociation.modificationTime|date('Y-m-d') }}</td>
                            <td>PropertiesRelation-HierarchyAssociation</td>
                        </tr>
                    {% endfor %}
                    {% for entityAssociation in namespace.entityAssociations %}
                        <tr>
                            <td>
                                {% if entityAssociation.sourceClass is not null %}
                                    {{ entityAssociation.sourceClass.classVersionForDisplay(entityAssociation.sourceNamespaceForVersion) }}
                                {% elseif entityAssociation.sourceProperty is not null %}
                                    {{ entityAssociation.sourceProperty.propertyVersionForDisplay(entityAssociation.sourceNamespaceForVersion) }}
                                {% endif %}
                            </td>
                            <td>
                                {% if entityAssociation.sourceClass is not null %}
                                    <a href="{{ path('class_show_with_version', {
                                        'id': entityAssociation.sourceClass.id,
                                        'namespaceFromUrlId': entityAssociation.sourceNamespaceForVersion.id,
                                        '_fragment':'relations'
                                    }) }}">
                                        {{ entityAssociation.systemType.standardLabel }}
                                    </a>
                                {% elseif entityAssociation.sourceProperty is not null %}
                                    <a href="{{ path('property_show_with_version', {
                                        'id': entityAssociation.sourceProperty.id,
                                        'namespaceFromUrlId': entityAssociation.sourceNamespaceForVersion.id,
                                        '_fragment':'relations'
                                    }) }}">
                                        {{ entityAssociation.systemType.standardLabel }}
                                    </a>
                                {% endif %}
                            </td>
                            <td>
                                {% if entityAssociation.targetClass is not null %}
                                    {{ entityAssociation.targetClass.classVersionForDisplay(entityAssociation.targetNamespaceForVersion) }}
                                {% elseif entityAssociation.targetProperty is not null %}
                                    {{ entityAssociation.targetProperty.propertyVersionForDisplay(entityAssociation.targetNamespaceForVersion) }}
                                {% endif %}
                            </td>
                            <td>{{ entityAssociation.modificationTime|date('Y-m-d') }}</td>
                            <td>
                                {% if entityAssociation.sourceClass is not null %}
                                    ClassesRelation-OtherRelation
                                {% elseif entityAssociation.sourceProperty is not null %}
                                    PropertiesRelation-OtherRelation
                                {% endif %}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="graph" class="tab-pane fade">
                <h3>Graph</h3>
                <p class="text-warning"><span class="fa fa-exclamation-circle"></span> Please note this is an experimental feature. <strong>Click on the full screen button if the graph is not displayed</strong></p>
                {% if namespace.classes|length > 0 and namespace.properties|length > 0 %}
                    <a href="https://betagraph.ontome.net/#url={{ url('namespace_json', {'id': namespace.id}) }}" target="_blank" class="btn btn-primary">Full screen (WebVOWL) <span class="fa fa-desktop"></span></a><br><br>
                    <embed src="https://betagraph.ontome.net/#url={{ url('namespace_json', {'id': namespace.id}) }}" width="100%" height="1000px"><br><br>
                    <a href="https://betagraph.ontome.net/#url={{ url('namespace_json', {'id': namespace.id}) }}" target="_blank" class="btn btn-primary">Full screen (WebVOWL) <span class="fa fa-desktop"></span></a>

                {% else %}
                    <p>The webvowl graph cannot be displayed because there is no class or property in this namespace.</p>
                {% endif %}
            </div>
            <div id="comments" class="tab-pane fade">
                <h3>Comments</h3>
                <div class="comment-box js-user-info" data-fullname="{{ app.user }}">
                    <div class="action-box">
                        {% if namespace.comments is empty %}
                            <p id="comment-not-found"><em>No comment found.</em></p>
                        {% endif %}
                        <ul id="comments-list" class="comments-list">
                            {% for comment in namespace.comments %}
                                <li>
                                    <div class="comment-text">
                                        <p><strong><a href="#">{{ comment.creator.fullName }}</a></strong></p>
                                        <p>{{ comment.comment }}</p>
                                        <span class="date sub-comment-text">on {{ comment.creationTime|date() }}</span>
                                    </div>
                                </li>
                            {% endfor %}
                        </ul>

                        {% if app.user %}
                            <div class="new-comment-form" id="new-comment-form">
                                {{ render(controller('AppBundle:Comment:new', {'object' : 'namespace', 'objectId' : namespace.id})) }}
                            </div>
                        {% endif %}
                    </div>
                </div>
            </div>
            <div id="mismatches" class="tab-pane fade">
                <h3>List of mismatches with reference namespaces</h3>
                <p>Entities listed here are not correctly associated with your <a data-toggle="tab" href="#identification">reference namespaces</a>.
                    They are displayed in red in your ongoing namespace. They may not be available in the version of the selected space.
                    Or you may not have selected any version of a <a data-toggle="tab" href="#identification">reference namespace</a>.<br>Please make the necessary corrections before proceeding.</p>
                <table class="table table-striped" id="mismatches-table">
                    <thead>
                        <tr>
                            <th>Type of relation</th>
                            <th>Entity</th>
                            <th>Namespace</th>
                            <th>Error type</th>
                        </tr>
                    </thead>
                    <tbody>
                        {% set errorType = "Missing reference namespace" %}

                        {# Premiere boucle : les hierarchies de classes - vérification des parents #}
                        {% for classAssociation in namespace.classAssociations if classAssociation.parentClassNamespace.id not in namespace.selectedNamespacesId %}
                            {% if namespace.selectedNamespacesId|length != 2 %}
                                {% set errorType = "Class not in any reference namespace" %}
                                {% if classAssociation.parentClassNamespace.id in namespace.largeSelectedNamespacesId %}
                                    {% set errorType = "Class not in the selected version of the reference namespace" %}
                                {% endif %}
                            {% endif %}
                            <tr>
                                <td>
                                    <a href="{{ path('class_show_with_version', {
                                        'id': classAssociation.childClass.id,
                                        'namespaceFromUrlId': classAssociation.childClassNamespace.id,
                                        '_fragment': 'class-hierarchy'
                                    }) }}">hierarchy (rdfs:subclassOf)</a>
                                </td>
                                <td>{{ classAssociation.parentClass.classVersionForDisplay(classAssociation.parentClassNamespace) }}</td>
                                <td>{{ classAssociation.parentClassNamespace }}</td>
                                <td>{{ errorType }}</td>
                            </tr>
                        {% endfor %}

                        {# Deuxieme boucle : les hierarchies de classes - vérification des enfants#}
                        {% for classAssociation in namespace.classAssociations if classAssociation.childClassNamespace.id not in namespace.selectedNamespacesId %}
                            {% if namespace.selectedNamespacesId|length != 2 %}
                                {% set errorType = "Class not in any reference namespace" %}
                                {% if classAssociation.childClassNamespace.id in namespace.largeSelectedNamespacesId %}
                                    {% set errorType = "Class not in the selected version of the reference namespace" %}
                                {% endif %}
                            {% endif %}
                            <tr>
                                <td>
                                    <a href="{{ path('class_show_with_version', {
                                        'id': classAssociation.childClass.id,
                                        'namespaceFromUrlId': classAssociation.childClassNamespace.id,
                                        '_fragment': 'class-hierarchy'
                                    }) }}">hierarchy (rdfs:subclassOf)</a>
                                </td>
                                <td>{{ classAssociation.childClass.classVersionForDisplay(classAssociation.childClassNamespace) }}</td>
                                <td>{{ classAssociation.childClassNamespace }}</td>
                                <td>{{ errorType }}</td>
                            </tr>
                        {% endfor %}

                        {# Troisieme boucle : les hierarchies de propriétés - vérification des parents #}
                        {% for propertyAssociation in namespace.propertyAssociations if propertyAssociation.parentPropertyNamespace.id not in namespace.selectedNamespacesId %}
                            {% if namespace.selectedNamespacesId|length != 2 %}
                                {% set errorType = "Property not in any reference namespace" %}
                                {% if propertyAssociation.parentPropertyNamespace.id in namespace.largeSelectedNamespacesId %}
                                    {% set errorType = "Property not in the selected version of the reference namespace" %}
                                {% endif %}
                            {% endif %}
                            <tr>
                                <td>
                                    <a href="{{ path('property_show_with_version', {
                                        'id': propertyAssociation.childProperty.id,
                                        'namespaceFromUrlId': propertyAssociation.childPropertyNamespace.id,
                                        '_fragment': 'property-hierarchy'
                                    }) }}">hierarchy (rdfs:subpropertyOf)</a>
                                </td>
                                <td>{{ propertyAssociation.parentProperty.propertyVersionForDisplay(propertyAssociation.parentPropertyNamespace) }}</td>
                                <td>{{ propertyAssociation.parentPropertyNamespace }}</td>
                                <td>{{ errorType }}</td>
                            </tr>
                        {% endfor %}

                        {# Quatrieme boucle : les hierarchies de propriétés - vérification des enfants #}
                        {% for propertyAssociation in namespace.propertyAssociations if propertyAssociation.childPropertyNamespace.id not in namespace.selectedNamespacesId %}
                            {% if namespace.selectedNamespacesId|length != 2 %}
                                {% set errorType = "Property not in any reference namespace" %}
                                {% if propertyAssociation.childPropertyNamespace.id in namespace.largeSelectedNamespacesId %}
                                    {% set errorType = "Property not in the selected version of the reference namespace" %}
                                {% endif %}
                            {% endif %}
                            <tr>
                                <td>
                                    <a href="{{ path('property_show_with_version', {
                                        'id': propertyAssociation.childProperty.id,
                                        'namespaceFromUrlId': propertyAssociation.childPropertyNamespace.id,
                                        '_fragment': 'property-hierarchy'
                                    }) }}">hierarchy (rdfs:subpropertyOf)</a>
                                </td>
                                <td>{{ propertyAssociation.childProperty.propertyVersionForDisplay(propertyAssociation.childPropertyNamespace) }}</td>
                                <td>{{ propertyAssociation.childPropertyNamespace }}</td>
                                <td>{{ errorType }}</td>
                            </tr>
                        {% endfor %}

                        {# Cinquieme boucle : les propriétés - vérification des domains #}
                        {% for property in namespace.properties if property.propertyVersionForDisplay(namespace).domainNamespace is not null
                            and property.propertyVersionForDisplay(namespace).domainNamespace.id not in namespace.selectedNamespacesId %}
                            {% if namespace.selectedNamespacesId|length != 2 %}
                                {% set errorType = "Class not in any reference namespace" %}
                                {% if property.propertyVersionForDisplay(namespace).domainNamespace.id in namespace.largeSelectedNamespacesId %}
                                    {% set errorType = "Class not in the selected version of the reference namespace" %}
                                {% endif %}
                            {% endif %}
                            <tr>
                                <td>
                                    <a href="{{ path('property_show_with_version', {
                                        'id': property.id,
                                        'namespaceFromUrlId': namespace.id,
                                        '_fragment': 'identification'
                                    }) }}">domain class (rdfs:domain)</a>
                                </td>
                                <td>{{ property.propertyVersionForDisplay(namespace).domain.classVersionForDisplay(property.propertyVersionForDisplay(namespace).domainNamespace) }}</td>
                                <td>{{ property.propertyVersionForDisplay(namespace).domainNamespace }}</td>
                                <td>{{ errorType }}</td>
                            </tr>
                        {% endfor %}

                        {# Sixieme boucle : les propriétés - vérification des ranges #}
                        {% for property in namespace.properties if property.propertyVersionForDisplay(namespace).rangeNamespace is not null
                            and property.propertyVersionForDisplay(namespace).rangeNamespace.id not in namespace.selectedNamespacesId %}
                            {% if namespace.selectedNamespacesId|length != 2 %}
                                {% set errorType = "Class not in any reference namespace" %}
                                {% if property.propertyVersionForDisplay(namespace).rangeNamespace.id in namespace.largeSelectedNamespacesId %}
                                    {% set errorType = "Class not in the selected version of the reference namespace" %}
                                {% endif %}
                            {% endif %}
                            <tr>
                                <td>
                                    <a href="{{ path('property_show_with_version', {
                                        'id': property.id,
                                        'namespaceFromUrlId': namespace.id,
                                        '_fragment': 'identification'
                                    }) }}">range class (rdfs:range)</a>
                                </td>
                                <td>{{ property.propertyVersionForDisplay(namespace).range.classVersionForDisplay(property.propertyVersionForDisplay(namespace).rangeNamespace) }}</td>
                                <td>{{ property.propertyVersionForDisplay(namespace).rangeNamespace }}</td>
                                <td>{{ errorType }}</td>
                            </tr>
                        {% endfor %}

                        {# Septième boucle : les relations - vérification des sources #}
                        {% for entityAssociation in namespace.entityAssociations if entityAssociation.sourceNamespaceForVersion.id not in namespace.selectedNamespacesId %}
                            {% if entityAssociation.sourceClass is not null %}
                                {% if namespace.selectedNamespacesId|length != 2 %}
                                    {% set errorType = "Class not in any reference namespace" %}
                                    {% if entityAssociation.sourceNamespaceForVersion.id in namespace.largeSelectedNamespacesId %}
                                        {% set errorType = "Class not in the selected version of the reference namespace" %}
                                    {% endif %}
                                {% endif %}
                                <tr>
                                    <td>
                                        <a href="{{ path('class_show_with_version', {
                                            'id': entityAssociation.targetClass.id,
                                            'namespaceFromUrlId': entityAssociation.targetNamespaceForVersion.id,
                                            '_fragment': 'relations'
                                        }) }}">{{ entityAssociation.systemType }}</a>
                                    </td>
                                    <td>{{ entityAssociation.sourceClass.classVersionForDisplay(entityAssociation.sourceNamespaceForVersion) }}</td>
                                    <td>{{ entityAssociation.sourceNamespaceForVersion }}</td>
                                    <td>{{ errorType }}</td>
                                </tr>
                            {% elseif entityAssociation.sourceProperty is not null %}
                                {% if namespace.selectedNamespacesId|length != 2 %}
                                    {% set errorType = "Property not in any reference namespace" %}
                                    {% if entityAssociation.sourceNamespaceForVersion.id in namespace.largeSelectedNamespacesId %}
                                        {% set errorType = "Property not in the selected version of the reference namespace" %}
                                    {% endif %}
                                {% endif %}
                                <tr>
                                    <td>
                                        <a href="{{ path('property_show_with_version', {
                                            'id': entityAssociation.targetProperty.id,
                                            'namespaceFromUrlId': entityAssociation.targetNamespaceForVersion.id,
                                            '_fragment': 'relations'
                                        }) }}">{{ entityAssociation.systemType }}</a>
                                    </td>
                                    <td>{{ entityAssociation.sourceProperty.propertyVersionForDisplay(entityAssociation.sourceNamespaceForVersion) }}</td>
                                    <td>{{ entityAssociation.sourceNamespaceForVersion }}</td>
                                    <td>{{ errorType }}</td>
                                </tr>
                            {% endif %}
                        {% endfor %}

                        {# Huitième boucle : les relations - vérification des targets #}
                        {% for entityAssociation in namespace.entityAssociations if entityAssociation.targetNamespaceForVersion.id not in namespace.selectedNamespacesId %}
                            {% if entityAssociation.targetClass is not null %}
                                {% if namespace.selectedNamespacesId|length != 2 %}
                                    {% set errorType = "Class not in any reference namespace" %}
                                    {% if entityAssociation.targetNamespaceForVersion.id in namespace.largeSelectedNamespacesId %}
                                        {% set errorType = "Class not in the selected version of the reference namespace" %}
                                    {% endif %}
                                {% endif %}
                                <tr>
                                    <td>
                                        <a href="{{ path('class_show_with_version', {
                                            'id': entityAssociation.sourceClass.id,
                                            'namespaceFromUrlId': entityAssociation.sourceNamespaceForVersion.id,
                                            '_fragment': 'relations'
                                        }) }}">{{ entityAssociation.systemType }}</a>
                                    </td>
                                    <td>{{ entityAssociation.targetClass.classVersionForDisplay(entityAssociation.targetNamespaceForVersion) }}</td>
                                    <td>{{ entityAssociation.targetNamespaceForVersion }}</td>
                                    <td>{{ errorType }}</td>
                                </tr>
                            {% elseif entityAssociation.targetProperty is not null %}
                                {% if namespace.selectedNamespacesId|length != 2 %}
                                    {% set errorType = "Property not in any reference namespace" %}
                                    {% if entityAssociation.targetNamespaceForVersion.id in namespace.largeSelectedNamespacesId %}
                                        {% set errorType = "Property not in the selected version of the reference namespace" %}
                                    {% endif %}
                                {% endif %}
                                <tr>
                                    <td>
                                        <a href="{{ path('property_show_with_version', {
                                            'id': entityAssociation.sourceProperty.id,
                                            'namespaceFromUrlId': entityAssociation.sourceNamespaceForVersion.id,
                                            '_fragment': 'relations'
                                        }) }}">{{ entityAssociation.systemType }}</a>
                                    </td>
                                    <td>{{ entityAssociation.targetProperty.propertyVersionForDisplay(entityAssociation.targetNamespaceForVersion) }}</td>
                                    <td>{{ entityAssociation.targetNamespaceForVersion }}</td>
                                    <td>{{ errorType }}</td>
                                </tr>
                            {% endif %}
                        {% endfor %}
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        //Custom filtering function which will search data in column five, hidden in table "Relations"
        //Pour filtrer les relations Class To Class, Property To Property, etc...
        $.fn.dataTable.ext.search.push(
            function( settings, data, dataIndex ) {
                // Don't filter on anything other than "relations-table"
                if ( settings.nTable.id !== 'relations-table' ) {
                    return true;
                }
                var filterEntityRelations = $("#btns-choose-entity-relations .btn-primary").val();
                var filterTypeRelations = $("#btns-choose-type-relations .btn-primary").val();
                var filterRelations = filterEntityRelations+"-"+filterTypeRelations;
                var strForFilter = data[4]; // use data for comparaison
                return strForFilter.includes(filterRelations);
            }
        );

        $(document).ready(function() {
            var j_last_known_hash = location.hash;
            window.setInterval(function() {
                var newHash = location.hash;
                if(j_last_known_hash != newHash) {
                    var index = getIndexForHash(newHash);
                    $('.tab-content').tabs("select",index);
                    j_last_known_hash = newHash;
                }
            }, 100);

            $('#namespaces-table').DataTable();
            $('#reference-namespaces-table').DataTable({"dom": "t", "searching": false, "paging": false, language: {emptyTable: "No reference namespace has been specified."}});
            $('#labels-table').DataTable();
            $('#descriptions-table').DataTable();
            $('#additional-notes-table').DataTable();
            $('#properties-table').DataTable({
                columnDefs: [
                    { type: 'natural-ci', targets: 2, width: '1%', className: 'text-right' },
                    { targets: -1, width: '1%'}
                ],
                "autoWidth": false,
                order: [[ 3, 'asc' ]]});
            $('#classes-table').DataTable({
                columnDefs: [
                    { type: 'natural-ci', targets: 0, width: '1%', className: 'text-right' },
                    { targets: -1, width: '1%'}
                ],
                "autoWidth": false,
                order: [[ 1, 'asc' ]]});
            var tableRelations = $('#relations-table').DataTable({
                "columnDefs": [
                    { "visible": false, "targets": 4 }
                ],
                "autoWidth": false
            });
            $('#mismatches-table').DataTable();
            $('#child-namespaces-table').DataTable({
                "order": [[0, 'desc']],
                "columnDefs": [
                    {"visible": false, "targets": 0 }
                ],
                "autoWidth": false
            });

            $('#summary a[href="#mismatches"]').click(function (e) {
                e.preventDefault();
                $('.nav-tabs a[href="#mismatches"]').tab('show');
            });

            $('#mismatches a[href="#identification"]').click(function (e) {
                e.preventDefault();
                $('.nav-tabs a[href="#identification"]').tab('show');
            });

            $('a.updateViewComment').on('click', function () {
                var selectedObject = $(this).data("object");
                var selectedValue = $(this).data("id");
                var url = '{{ path("viewed_by_json", {'object': 'selectedObject', 'objectId': 'selectedValue'}) }}';
                url = url.replace("selectedValue", selectedValue);
                url = url.replace("selectedObject", selectedObject);
                $.ajax({
                    url: url,
                    type: 'GET',
                    dataType: 'json',
                    statusCode: {
                        204: function () {}
                    }
                });
            });

            $('#btns-choose-entity-relations .btn').on('click', function () {
                $('#btns-choose-entity-relations .btn').removeClass("btn-primary");
                $('#btns-choose-entity-relations .btn').addClass("btn-default");
                $(this).addClass("btn-primary");
                tableRelations.draw();
            });

            $('#btns-choose-type-relations .btn').on('click', function () {
                $('#btns-choose-type-relations .btn').removeClass("btn-primary");
                $('#btns-choose-type-relations .btn').addClass("btn-default");
                $(this).addClass("btn-primary");
                tableRelations.draw();
            });

        } );
    </script>
    {% include 'comment/js-bock.html.twig'  with {'objectType': 'namespace', 'objectId' : namespace.id  } %}
{% endblock %}
