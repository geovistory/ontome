{% extends 'base.html.twig' %}

{% block title %}{{ project.standardLabel }}{% endblock %}

{% block body %}

    <div class="container">
        <h2 class="project-name">{{ project.standardLabel }}</h2>

        <ul class="nav nav-tabs">
            <li class="active"><a data-toggle="tab" href="#summary">Summary</a></li>
            <li><a data-toggle="tab" href="#definition">Definition</a></li>
            <li><a data-toggle="tab" href="#identification">Identification</a></li>
            <li><a data-toggle="tab" href="#project-hierarchy">Hierarchy</a></li>
            <li><a data-toggle="tab" href="#managed-namespaces">Namespaces</a></li>
            <li><a data-toggle="tab" href="#profiles">Profiles</a></li>
            <li><a data-toggle="tab" href="#members">Members</a></li>
        </ul>
        <div class="tab-content">
            <div id="summary" class="tab-pane fade in active">
                <h3>{{ project.standardLabel }}</h3>
                <div class="container">
                    <div class="row">
                        <div class="col-lg-2">
                            <p>Description:</p>
                        </div>
                        <div class="col-lg-10">
                            {% set description, break = null, false %}
                            {% for textProperty in project.textProperties if textProperty.systemType.id == 16 %}
                                {% if not break %}
                                    {% if textProperty.languageIsoCode == 'en' %}
                                        {% set break = true %}
                                        {% set description = textProperty.textProperty %}
                                    {% else %}
                                        {% if description == null %}
                                            {% set description = textProperty.textProperty %}
                                        {% endif %}
                                    {% endif %}
                                {% endif %}
                            {% endfor %}

                            {% if description is not null %}
                                {{ description|raw }}
                            {% else %}
                                <p><i>No description yet.</i></p>
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
            <div id="definition" class="tab-pane fade">
                <div class="pull-right add-div">
                    <a href="{{ path('text_property_new', {'type': 'definition', 'object': 'project', 'objectId': project.id })}}"
                       class="btn btn-primary pull-right">
                        Add <span class="fa fa-plus-circle"></span>
                    </a>
                </div>
                <h3>Description</h3>
                <table class="table table-striped" id="description-table">
                    <thead>
                    <tr>
                        <th>Show</th>
                        <th>Description</th>
                        <th>Language</th>
                        <th>Edit</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for textProperty in project.textProperties if textProperty.systemType.id == 16 %}
                    {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        <tr>
                            <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                            <td class="truncated-text">
                                <span>{{ textProperty.textProperty|striptags|raw}}</span>
                            </td>
                            <td>{{ textProperty.languageIsoCode}}</td>
                            <td>
                                <a href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}"
                                   class="btn btn-xs btn-success">
                                    <span class="fa fa-edit"></span>
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>

                <div class="pull-right add-div">
                    <a href="{{ path('text_property_new', {'type': 'additional-note', 'object': 'project', 'objectId': project.id })}}"
                       class="btn btn-primary pull-right">
                        Add <span class="fa fa-plus-circle"></span>
                    </a>
                </div>
                <h3>Additional notes</h3>
                <table class="table table-striped" id="additional-notes-table">
                    <thead>
                    <tr>
                        <th>Show</th>
                        <th>Notes</th>
                        <th>Language</th>
                        <th>Namespace</th>
                        <th>Edit</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for textProperty in project.textProperties if textProperty.systemType.id == 12 %}
                    {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        <tr>
                            <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                            <td class="truncated-text">
                                <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            </td>
                            <td>{{ textProperty.languageIsoCode}}</td>
                            <td>WIP</td>
                            <td>
                                <a href="{{ path('text_property_edit', {
                                    'id': textProperty.id
                                }) }}"
                                   class="btn btn-xs btn-success">
                                    <span class="fa fa-edit"></span>
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="identification" class="tab-pane fade">
                <h3>Identification</h3>
                {% if  project.startDate is not null %}
                <p>Start date: {{ project.startDate|date('Y-m-d') }}</p>
                {% endif %}
                {% if  project.endDate is not null %}
                    <p>End date: {{ project.endDate|date('Y-m-d') }}</p>
                {% endif %}
                <div class="pull-right add-div">
                    <a href="{{ path('label_new', {'object': 'project', 'objectId': project.id })}}"
                       class="btn btn-primary pull-right">
                        Add <span class="fa fa-plus-circle"></span>
                    </a>
                </div>
                <h3>Labels</h3>
                <table class="table table-striped" id="labels-table">
                    <thead>
                    <tr>
                        <th>Label</th>
                        <th>Language</th>
                        <th>Last updated</th>
                        <th>Edit</th>
                        <th>Comments</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for label in project.labels %}
                        <tr>
                            <td>
                                <a href="{{ path('label_show', {
                                    'id': label.id
                                }) }}">{{ label.label }}</a> {% if label.isStandardLabelForLanguage %}*{% endif %}
                            </td>
                            <td>{{ label.languageIsoCode}}</td>
                            <td>{{ label.modificationTime|date('Y-m-d') }}</td>
                            <td>
                                <a href="{{ path('label_edit', {
                                    'id': label.id
                                }) }}"
                                   class="btn btn-xs btn-success">
                                    <span class="fa fa-edit"></span>
                                </a>
                            </td>
                            <td>
                                <a class="btn" href="{{ path('label_edit', {
                                    'id': label.id
                                }) }}#comments">
                                    <span class="badge {% if label.comments|length > 0  %}progress-bar-danger {% endif %}">{{ label.comments|length }}</span>
                                </a>
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <p>* : Standard label for this language</p>
            </div>
            <div id="project-hierarchy" class="tab-pane fade">
                <h3>Parent projects</h3>
                <table class="table table-striped" id="parent-projects-table">
                    <thead>
                    <tr>
                        <th>Project identifier</th>
                        <th>Last updated</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% if project.parentProject is not null  %}
                        <tr>
                            <td>
                                <a href="{{ path('project_show', {
                                    'id': project.parentProject.id
                                }) }}">
                                    {{ project.parentProject.standardLabel }}
                                </a>
                            </td>
                            <td>{{ project.parentProject.modificationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endif %}
                    </tbody>
                </table>
                <h3>Child projects</h3>
                <table class="table table-striped" id="child-projects-table">
                    <thead>
                    <tr>
                        <th>Project identifier</th>
                        <th>Last updated</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for childProject in project.childProjects  %}
                        <tr>
                            <td>
                                <a href="{{ path('project_show', {
                                    'id': childProject.id
                                }) }}">
                                    {{ childProject.standardLabel }}
                                </a>
                            </td>
                            <td>{{ childProject.modificationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="managed-namespaces" class="tab-pane fade">
                {% if is_granted('full_edit', project) and project.managedNamespaces is empty %}
                <div class="pull-right add-div">
                    <a href="{{ path('namespace_new', {'project': project.id}) }}" class="btn btn-primary pull-right">Add <span class="fa fa-plus-circle"></span></a>
                </div>
                {% endif %}
                <h3>Namespaces managed by this project</h3>
                <table class="table table-striped" id="managed-namespaces-table">
                    <thead>
                    <tr>
                        <th>Namespace</th>
                        <th>Last updated</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for namespace in project.managedNamespaces if namespace.isTopLevelNamespace %}
                        <tr>
                            <td>
                                <a href="{{ path('namespace_show', {
                                    'id': namespace.id
                                }) }}">
                                    {{ namespace }}
                                </a>
                            </td>
                            <td>{{ namespace.modificationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                {% if is_granted('full_edit', project) and project.id == 21 %}
                    <div class="pull-right add-div">
                        <a href="{{ path('public_project_namespace_association_new') }}" class="btn btn-primary pull-right">Add <span class="fa fa-plus-circle"></span></a>
                    </div>
                    <h3>Namespaces for the Public project</h3>
                    <table class="table table-striped" id="public-project-namespaces-table">
                        <thead>
                        <tr>
                            <th>Namespace</th>
                            <th>Delete</th>
                        </tr>
                        </thead>
                        <tbody>
                        {% for namespace in namespacesPublicProject %}
                            <tr>
                                <td>
                                    <a href="{{ path('namespace_show', {
                                        'id': namespace.id
                                    }) }}">
                                        {{ namespace.standardLabel }}
                                    </a>
                                </td>
                                <td>
                                    <a href="{{ path('project_association_delete', {
                                        'id' : namespace.associationId
                                    }) }}">
                                        <span class="glyphicon glyphicon-remove text-danger" aria-hidden="true"></span>
                                    </a>
                                </td>
                            </tr>
                        {% endfor %}
                        </tbody>
                    </table>
                {% endif %}
            </div>
            <div id="profiles" class="tab-pane fade">
                {% if is_granted('edit', project) %}
                    <div class="pull-right add-div">
                        <a href="{{ path('profile_new', {'project': project.id}) }}" class="btn btn-primary pull-right">Add <span class="fa fa-plus-circle"></span></a>
                    </div>
                {% endif %}
                <h3>Profiles owned by this project</h3>
                <table class="table table-striped" id="owned-profiles-table">
                    <thead>
                    <tr>
                        <th>Profile</th>
                        <th>Creation date</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for profile in project.ownedProfiles %}
                        <tr>
                            <td>
                                <a href="{{ path('profile_show', {
                                    'id': profile.id
                                }) }}">
                                    {{ profile.standardLabel }}
                                </a>
                            </td>
                            <td>{{ profile.creationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
                <h3>
                    Profiles used by this project
                    <a data-toggle="tooltip" data-placement="right" title="These profiles are available in the API">
                        <span class="fas fa-info-circle"></span>
                    </a>
                </h3>
                <table class="table table-striped" id="associated-profiles-table">
                    <thead>
                    <tr>
                        <th>Profile</th>
                        <th>Creation date</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for profile in project.profiles %}
                        <tr>
                            <td>
                                <a href="{{ path('profile_show', {
                                    'id': profile.id
                                }) }}">
                                    {{ profile.standardLabel }}
                                </a>
                            </td>
                            <td>{{ profile.creationTime|date('Y-m-d') }}</td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            </div>
            <div id="members" class="tab-pane fade">
                <div class="row">
                    <div class="col-md-6">
                        <h3>Members of the project</h3>
                        <table class="table table-striped" id="members-of-the-project-table" style="width:100%">
                            <thead>
                            <tr>
                                <th></th>
                                <th></th>
                                <th>Name</th>
                                <th>Institution</th>
                                <th>Role</th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h3>OntoME users</h3>
                        <table class="table table-striped" id="ontome-users-table" style="width:100%">
                            <thead>
                            <tr>
                                <th>ID</th>
                                <th>Name</th>
                                <th>Institution</th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    </section>
{% endblock %}

{% block javascripts %}
    {{ parent() }}

    <script>
        $(document).ready(function() {
            var projectID = {{ project.id }};
            var urlSelectableMembers = '{{ path("selectable_members_project_json", {'project' : 'projectID'}) }}';
            urlSelectableMembers = urlSelectableMembers.replace("projectID", projectID);

            var urlAssociatedMembers = '{{ path("associated_members_project_json", {'project' : 'projectID'}) }}';
            urlAssociatedMembers = urlAssociatedMembers.replace("projectID", projectID);

            var isAdmin = "{{ is_granted('full_edit', project) }}";
            if(isAdmin == '') {
                isAdmin = false;
            }
            else if (isAdmin == '1') {
                isAdmin = true;
            }
            var isManager = "{{ is_granted('edit_manager', project) }}"; //an admin IS a manager too
            if(isManager == '') {
                isManager = false;
            }
            else if (isManager == '1') {
                isManager = true;
            }
            var currentUserId = {{ app.user.id }};

            $('#labels-table').DataTable();
            $('#description-table').DataTable();
            $('#additional-notes-table').DataTable();
            $('#parent-projects-table').DataTable();
            $('#child-projects-table').DataTable();
            $('#managed-namespaces-table').DataTable();
            $('#public-project-namespaces-table').DataTable();
            $('#owned-profiles-table').DataTable();
            $('#associated-profiles-table').DataTable();
            var associatedMembersTable = $('#members-of-the-project-table').DataTable({
                order: [[ 4, "asc" ]],
                ajax: urlAssociatedMembers,
                dataSrc: 'data',
                columns: [
                    { data: 'associationId' },
                    { data: 'id' },
                    { data: 'fullname' },
                    { data: 'institution' },
                    { data: 'permission' }
                ],
                columnDefs: [
                    {
                        targets: 0,
                        render: function ( data, type, row, meta ) {

                            var urlRemoveMember = '{{ path("project_member_disassociation", {'id' : 'associationId'}) }}';
                            urlRemoveMember = urlRemoveMember.replace("associationId", data);

                            var renderedRemoveIcon = '';

                            if(isAdmin && currentUserId != row.id) {
                                renderedRemoveIcon = '<a data-id="' + data + '" data-url="' + urlRemoveMember + '" class="remove-member"><span class="glyphicon glyphicon-remove text-danger" aria-hidden="true"></span></a><span class="remove-member-loading-icon" data-id="' + row.data + '" style="display: none"><span class="fas fa-spinner fa-spin"></span></span>';
                            }
                            else if(isManager && !isAdmin && row.permission == 3)
                            {
                                renderedRemoveIcon = '<a data-id="' + data + '" data-url="' + urlRemoveMember + '" class="remove-member"><span class="glyphicon glyphicon-remove text-danger" aria-hidden="true"></span></a><span class="remove-member-loading-icon" data-id="' + row.data + '" style="display: none"><span class="fas fa-spinner fa-spin"></span></span>';
                            }
                            else renderedRemoveIcon = '';

                            return renderedRemoveIcon;
                        }
                    },
                    {
                        targets: 4,
                        render: function ( data, type, row, meta ) {
                            var urlEditAssociationPermission = '{{ path("project_member_permission_edit", {'id' : 'associationId', 'permission' : 'permissionToken'}) }}';
                            urlEditAssociationPermission = urlEditAssociationPermission.replace("associationId", row.associationId);
                            var urlEditAssociationPermissionAdmin = urlEditAssociationPermission.replace("permissionToken", 1);
                            var urlEditAssociationPermissionManager = urlEditAssociationPermission.replace("permissionToken", 2);
                            var urlEditAssociationPermissionMember = urlEditAssociationPermission.replace("permissionToken", 3);


                            var renderedPermissionsBlock;
                            if(!isAdmin || currentUserId == row.id){
                                //l'utilisateur courrant n'a pas le droit de modifier son propre rôle pour éviter qu'un admin s'enlève lui même les droits et que le projet se retrouve sans aucun admin
                                var permissionBadge = '';
                                if(data == 1){
                                    permissionBadge = '<span class="label label-danger">Administrator</span>';
                                }
                                else if(data == 2){
                                    permissionBadge = '<span class="label label-warning">Manager</span>';
                                }
                                else if(data == 3){
                                    permissionBadge = '<span class="label label-success">Member</span>';
                                }

                                renderedPermissionsBlock = permissionBadge;
                            }
                            else {
                                var permissionButtonGroup = '';
                                if(data == 1){
                                    permissionButtonGroup = '<div class="btn-group">\n' +
                                    '  <button type="button" class="btn btn-xs btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n' +
                                    '    Administrator <span class="caret"></span>\n' +
                                    '  </button>\n' +
                                    '  <ul class="dropdown-menu">\n' +
                                    '    <li><a data-url="' + urlEditAssociationPermissionManager + '" class="edit-association-permission">Manager</a></li>\n' +
                                    '    <li><a data-url="' + urlEditAssociationPermissionMember + '" class="edit-association-permission">Member</a></li>\n' +
                                    '  </ul>\n' +
                                    '</div>';
                                }
                                else if(data == 2){
                                    permissionButtonGroup = '<div class="btn-group">\n' +
                                        '  <button type="button" class="btn btn-xs btn-warning dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n' +
                                        '    Manager <span class="caret"></span>\n' +
                                        '  </button>\n' +
                                        '  <ul class="dropdown-menu">\n' +
                                        '    <li><a data-url="' + urlEditAssociationPermissionAdmin + '" class="edit-association-permission">Administrator</a></li>\n' +
                                        '    <li><a data-url="' + urlEditAssociationPermissionMember + '" class="edit-association-permission">Member</a></li>\n' +
                                        '  </ul>\n' +
                                        '</div>';
                                }
                                else if(data == 3){
                                    permissionButtonGroup = '<div class="btn-group">\n' +
                                        '  <button type="button" class="btn btn-xs btn-success dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n' +
                                        '    Member <span class="caret"></span>\n' +
                                        '  </button>\n' +
                                        '  <ul class="dropdown-menu">\n' +
                                        '    <li><a data-url="' + urlEditAssociationPermissionAdmin + '" class="edit-association-permission">Administrator</a></li>\n' +
                                        '    <li><a data-url="' + urlEditAssociationPermissionManager + '" class="edit-association-permission">Manager</a></li>\n' +
                                        '  </ul>\n' +
                                        '</div>';
                                }

                                renderedPermissionsBlock = permissionButtonGroup;
                            }
                            return renderedPermissionsBlock;
                        }
                    },
                    {
                        visible: false,
                        targets: [1]
                    }
                ]
            });

            var selectableMembersTable = $('#ontome-users-table').DataTable({
                ajax: urlSelectableMembers,
                dataSrc: 'data',
                order: [[ 1, "asc" ]],
                columns: [
                    { data: 'id' },
                    { data: 'fullname' },
                    { data: 'institution' },
                ],
                columnDefs: [
                    {
                        targets: 1,
                        render: function ( data, type, row, meta ) {
                            var urlSelectMember = '{{ path("project_user_association", {'project' : 'projectID', 'user' : 'id'}) }}';
                            urlSelectMember = urlSelectMember.replace("projectID", projectID);
                            urlSelectMember = urlSelectMember.replace("id", row.id);
                            return '<a data-id="'+row.id+'" data-url="'+urlSelectMember+'" class="select-member"><span class="plus-icon" data-id="'+row.id+'"><span class="fas fa-plus"></span></span><span class="select-member-loading-icon" data-id="'+row.id+'" style="display: none"><span class="fas fa-spinner fa-spin"></span></span></a>&nbsp;' + data;
                        }
                    },
                    {
                        visible: false,
                        targets: [0]
                    }
                ]
            });

            $(document).on("click", ".select-member", function() {
                var selectedValue = $(this).data("id");
                $(".plus-icon[data-id='"+selectedValue+"']").hide(0);
                $(".select-member-loading-icon[data-id='"+selectedValue+"']").css('display','inline');
                var url =  $(this).data("url");
                $.ajax({
                    url: url ,
                    type: 'POST',
                    dataType: 'json',
                    success:function(data){
                        selectableMembersTable.ajax.reload();
                        associatedMembersTable.ajax.reload();
                    }
                });
            });

            $(document).on("click", ".edit-association-permission", function() {
                var url =  $(this).data("url");
                $.ajax({
                    url: url ,
                    type: 'POST',
                    dataType: 'json',
                    success:function(data){
                        associatedMembersTable.ajax.reload();
                    }
                });
            });

            $(document).on("click", ".remove-member", function() {
                var selectedValue = $(this).data("id");
                $(".remove-member[data-id='"+selectedValue+"']").hide(0);
                $(".remove-member-loading-icon[data-id='"+selectedValue+"']").css('display','inline');
                var url =  $(this).data("url");
                $.ajax({
                    url: url ,
                    type: 'POST',
                    dataType: 'json',
                    success:function(data){
                        associatedMembersTable.ajax.reload();
                        selectableMembersTable.ajax.reload();
                    }
                });
            });

        } );
    </script>

{% endblock %}
