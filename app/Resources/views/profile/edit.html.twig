{% extends 'base.html.twig' %}

{% block title %}{{ profile.standardLabel }}{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/css/select2.min.css" rel="stylesheet" />
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/css/bootstrap-datepicker.min.css" rel="stylesheet">
{% endblock %}

{% block body %}

<div class="container">
    <h2 class="profile-name">{{ profile.standardLabel }}</h2>
    <ul class="nav nav-tabs" id="main-tabs">
        <li class="active"><a data-toggle="tab" href="#summary">Summary</a></li>
        <li><a data-toggle="tab" href="#definition">Definition</a></li>
        <li><a data-toggle="tab" href="#identification">Identification</a></li>
        <li><a data-toggle="tab" href="#namespaces">Namespaces</a></li>
        <li><a data-toggle="tab" href="#classes">Classes</a></li>
        <li><a data-toggle="tab" href="#properties">Properties</a></li>
        <li><a data-toggle="tab" href="#projects">Projects</a></li>
        <li><a data-toggle="tab" href="#graph">Graph</a></li>
    </ul>

    <div class="tab-content">
        <div id="summary" class="tab-pane fade in active">
            <h3>{{ profile.standardLabel }}</h3>
            <div class="container">
                <div class="row">
                    <div class="col-lg-2">
                        <p>Description:</p>
                    </div>
                    <div class="col-lg-10">
                        {% set description, break = null, false %}
                        {% for textProperty in profile.textProperties if textProperty.systemType.id == 16 %}
                            {% if not break %}
                                {% if textProperty.languageIsoCode == 'en' %}
                                    {% set break = true %}
                                    {% set description = textProperty.textProperty %}
                                {% else %}
                                    {% if description == null %}
                                        {% set description = textProperty.textProperty %}
                                    {% endif %}
                                {% endif %}
                            {% endif %}
                        {% endfor %}

                        {% if description is not null %}
                            {{ description|raw }}
                        {% else %}
                            <p><i>No description yet.</i></p>
                        {% endif %}
                    </div>
                </div>
            </div>
        </div>
        <div id="definition" class="tab-pane fade">
            <h3>Description</h3>
            <table class="table table-striped" id="descriptions-table">
                <thead>
                <tr>
                    <th>Show</th>
                    <th>Description</th>
                    <th>Language</th>
                    <th>Edit</th>
                    <th>Comments</th>
                </tr>
                </thead>
                <tbody>
                {% for textProperty in profile.textProperties if textProperty.systemType.id == 16 %}
                    <tr>
                        <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                        <td class="truncated-text">
                            <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        </td>
                        <td>{{ textProperty.languageIsoCode}}</td>
                        <td>
                            <a href="{{ path('text_property_edit', {
                                'id': textProperty.id
                            }) }}"
                               class="btn btn-xs btn-success">
                                <span class="fa fa-edit"></span>
                            </a>
                        </td>
                        <td>
                            <a class="btn" href="{{ path('text_property_edit', {
                                'id': textProperty.id
                            }) }}#comments">
                                <span class="badge {% if textProperty.comments|length > 0  %}progress-bar-danger {% endif %}">{{ textProperty.comments|length }}</span>
                            </a>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
            <div class="pull-right add-div">
                <a href="{{ path('text_property_new', {'type': 'additional-note', 'object': 'profile', 'objectId': profile.id })}}"
                   class="btn btn-primary pull-right">
                    Add <span class="fa fa-plus-circle"></span>
                </a>
            </div>
            <h3>Additional notes</h3>
            <table class="table table-striped" id="additional-notes-table">
                <thead>
                <tr>
                    <th>Show</th>
                    <th>Notes</th>
                    <th>Language</th>
                    <th>Edit</th>
                    <th>Comment</th>
                </tr>
                </thead>
                <tbody>
                {% for textProperty in profile.textProperties if textProperty.systemType.id == 12 %}
                    <tr>
                        <td><a class="btn" href="#" data-toggle="modal" data-target="#modal-text-property-{{ textProperty.id }}"><span class="glyphicon glyphicon-eye-open" aria-hidden="true"></span></a></td>
                        <td class="truncated-text">
                            <span>{{ textProperty.textProperty|striptags|raw }}</span>
                            {{ include('textProperty/modal.html.twig', { 'modalId': textProperty.id }) }}
                        </td>
                        <td>{{ textProperty.languageIsoCode}}</td>
                        <td>
                            <a href="{{ path('text_property_edit', {
                                'id': textProperty.id
                            }) }}"
                               class="btn btn-xs btn-success">
                                <span class="fa fa-edit"></span>
                            </a>
                        </td>
                        <td>
                            <a class="btn" href="{{ path('text_property_edit', {
                                'id': textProperty.id
                            }) }}#comments">
                                <span class="badge {% if textProperty.comments|length > 0  %}progress-bar-danger {% endif %}">{{ textProperty.comments|length }}</span>
                            </a>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
        <div id="identification" class="tab-pane fade">
            <h3>Identification</h3>

            <div class="object-identification-edit-form">
                {% if profile.isOngoing and is_granted('full_edit', profile.projectOfBelonging) %}
                    {{ form_start(profileIdentificationForm) }}
                    {{ form_errors(profileIdentificationForm) }}
                    {{ form_row(profileIdentificationForm.projectOfBelonging) }}
                    {{ form_row(profileIdentificationForm.isForcedPublication) }}
                    <p><button type="submit" class="btn btn-primary" formnovalidate>Save <span class="far fa-save"></span></button>
                    <button type="button" class="btn btn-default" onclick="window.location.reload();">Cancel&nbsp;<i class="fas fa-undo-alt"></i></button></p>
                    {{ form_end(profileIdentificationForm) }}
                {% endif %}
                {% if not is_granted('full_edit', profile.projectOfBelonging) %}
                    <p>Project of belonging: <a href="{{ path('project_show', {'id': profile.projectOfBelonging.id}) }}">{{ profile.projectOfBelonging.standardLabel }}</a></p>
                {% endif %}
                {% if profile.isOngoing %}
                <div class="alert alert-info">
                    <p><i class="fas fa-info-circle"></i>&nbsp;This profile is ongoing</p>
                </div>
                    {% if is_granted('full_edit', profile.projectOfBelonging) %}
                    <p>
                        <a class="btn btn-success" role="button" id="publish-btn">
                            Publish <i class="fas fa-check"></i>
                        </a>
                    </p>
                    {% endif %}
                {% elseif profile.wasClosedAt is not null and profile.endDate is null %}
                    <p>Profile published and available since: {{ profile.startDate is empty ? '' : profile.startDate|date('Y-m-d') }}</p>
                    {% if is_granted('full_edit', profile.projectOfBelonging) %}
                        <p>
                            <a class="btn btn-danger" role="button" id="deprecate-btn">
                                Deprecate <i class="fas fa-ban"></i>
                            </a>
                        </p>
                    {% endif %}
                {% elseif profile.endDate is not null %}
                    <p>This profile was published on {{ profile.startDate is empty ? '' : profile.startDate|date('Y-m-d') }} and is <strong>deprecated</strong> and to no longer use since: {{ profile.endDate is empty ? '' : profile.endDate|date('Y-m-d') }}</p>
                {% endif %}

                {# note: disabled template because we may no longer use this (to be confirmed at next sprint meeting)
                {{ form_start(profileIdentificationForm) }}
                {{ form_errors(profileIdentificationForm) }}
                {{ form_row(profileIdentificationForm.projectOfBelonging) }}
                {{ form_row(profileIdentificationForm.startDate) }}
                {{ form_row(profileIdentificationForm.endDate) }}
                <button type="submit" class="btn btn-primary" formnovalidate>Save <span class="far fa-save"></span></button>
                <button type="button" class="btn btn-default" onclick="window.location.reload();">Cancel&nbsp;<i class="fas fa-undo-alt"></i></button>
                {{ form_end(profileIdentificationForm) }}
                #}
            </div>
            <div class="pull-right add-div">
                <a href="{{ path('label_new', {'object': 'profile', 'objectId': profile.id })}}"
                   class="btn btn-primary pull-right">
                    Add <span class="fa fa-plus-circle"></span>
                </a>
            </div>
            <h3>Labels</h3>
            <table class="table table-striped" id="labels-table">
                <thead>
                <tr>
                    <th>Label</th>
                    <th>Language</th>
                    <th>Last updated</th>
                    <th>Edit</th>
                    <th>Comments</th>
                </tr>
                </thead>
                <tbody>
                {% for label in profile.labels %}
                    <tr>
                        <td>
                            <a href="{{ path('label_show', {
                                'id': label.id
                            }) }}">{{ label.label }}</a> {% if label.isStandardLabelForLanguage %}*{% endif %}
                        </td>
                        <td>{{ label.languageIsoCode}}</td>
                        <td>{{ label.modificationTime|date('Y-m-d') }}</td>
                        <td>
                            <a href="{{ path('label_edit', {
                                'id': label.id
                            }) }}"
                               class="btn btn-xs btn-success">
                                <span class="fa fa-edit"></span>
                            </a>
                        </td>
                        <td>
                            <a class="btn" href="{{ path('label_edit', {
                                'id': label.id
                            }) }}#comments">
                                <span class="badge {% if label.comments|length > 0  %}progress-bar-danger {% endif %}">{{ label.comments|length }}</span>
                            </a>
                        </td>
                    </tr>
                {% endfor %}
                </tbody>
            </table>
            <p>* : Standard label for this language</p>
            <div class="pull-right add-div">
                <a href="{{ path('text_property_new', {'type': 'definition', 'object': 'profile', 'objectId': profile.id })}}"
                   class="btn btn-primary pull-right">
                    Add <span class="fa fa-plus-circle"></span>
                </a>
            </div>
        </div>
        <div id="classes" class="tab-pane fade">
            {% if profile.isOngoing %}
                <div class="row">
                    <div class="col-md-6">
                        <h3>Associated classes</h3>
                        <table class="table table-striped" id="classes-table" style="width:100%">
                            <thead>
                            <tr>
                                <th></th>
                                <th>ID</th>
                                <th>Identifier in namespace</th>
                                <th>Class</th>
                                <th>Association type</th>
                                <th>Namespace</th>
                                <th>Pick properties</th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                    <div class="col-md-6">
                        <h3>Selectable classes</h3>
                        <table class="table table-striped" id="selectable-classes-table" style="width:100%">
                            <thead>
                            <tr>
                                <th>Select</th>
                                <th>Class</th>
                                <th>Namespace</th>
                            </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            {% else %}
                <h3>
                    Associated classes
                    <span class="pull-right">
                        {% if (not profile.isOngoing and profile.wasClosedAt is not null and profile.endDate is null) or (profile.isForcedPublication and profile.isOngoing ) %}
                            <a  href="{{ path('api_classes_profile_json', {
                                'lang': 'en',
                                'available-in-profile': profile.id
                            }) }}"
                                class="btn btn-primary">
                                <i class="fas fa-microchip"></i> JSON API
                            </a>
                        {% endif %}
                    </span>
                </h3>
                <table class="table table-striped" id="classes-table">
                    <thead>
                    <tr>
                        <th>Class</th>
                        <th>Association type</th>
                        <th>Namespace</th>
                    </tr>
                    </thead>
                    <tbody>
                    {% for class in classes %}
                        <tr>
                            <td>
                                <a href="{{ path('class_show', {
                                    'id': class.id
                                }) }}">
                                    {% if class.identifierInNamespace != class.standardLabel and class.standardLabel is not null %}
                                        {{ class.standardLabel }} – {{ class.identifierInNamespace }}
                                    {% else %}
                                        {{ class.identifierInNamespace }}
                                    {% endif %}
                                </a>
                            </td>
                            <td>{{ class.associationType }}</td>
                            <td>
                                {{ class.namespace }}
                            </td>
                        </tr>
                    {% endfor %}
                    </tbody>
                </table>
            {% endif %}
        </div>
        <div id="properties" class="tab-pane fade">
            <h3>
                Associated properties
                <span class="pull-right">
                    {% if (not profile.isOngoing and profile.wasClosedAt is not null and profile.endDate is null) or (profile.isForcedPublication and profile.isOngoing ) %}
                        <a  href="{{ path('api_properties_profile_json', {
                            'lang': 'en',
                            'available-in-profile': profile.id
                        }) }}"
                            class="btn btn-primary">
                            <i class="fas fa-microchip"></i> JSON API
                        </a>
                    {% endif %}
                </span>
            </h3>
            <table class="table table-striped" id="properties-table">
                <thead>
                <tr>
                    <th class="text-right">Domain</th>
                    <th></th>
                    <th class="text-center">Property</th>
                    <th></th>
                    <th>Range</th>
                    <th>Namespace</th>
                    <th>Status</th>
                </tr>
                </thead>
                <tbody>
                {% for profileAssociation in profileAssociations if profileAssociation.property is not null %}
                    {% set showProperty = true %}
                    {% if profileAssociation.property.domain is not null %}

                        {% for profileAssociationClass in profileAssociation.property.domain.profileAssociations if profileAssociationClass.profile.id == profileAssociation.profile.id and profileAssociationClass.systemType.id == 6 %}
                            {% set showProperty = false %}
                        {% endfor %}
                    {% endif %}
                    {% if profileAssociation.property.range is not null %}
                        {% for profileAssociationClass in profileAssociation.property.range.profileAssociations if profileAssociationClass.profile.id == profileAssociation.profile.id and profileAssociationClass.systemType.id == 6 %}
                            {% set showProperty = false %}
                        {% endfor %}
                    {% endif %}
                    {% if profileAssociation.domain is not null %}
                        {% for profileAssociationClass in profileAssociation.domain.profileAssociations if profileAssociationClass.profile.id == profileAssociation.profile.id and profileAssociationClass.systemType.id == 6 %}
                            {% set showProperty = false %}
                        {% endfor %}
                    {% endif %}
                    {% if profileAssociation.range is not null %}
                        {% for profileAssociationClass in profileAssociation.range.profileAssociations if profileAssociationClass.profile.id == profileAssociation.profile.id and profileAssociationClass.systemType.id == 6 %}
                            {% set showProperty = false %}
                        {% endfor %}
                    {% endif %}

                    {% if showProperty == true %}
                    <tr>
                        <td class="text-nowrap text-right small">
                            {% if profileAssociation.domain is not null %}
                                <a href="{{ path('class_show', {'id': profileAssociation.domain.id }) }}">
                                    {{ profileAssociation.domain }}
                                </a>
                            {% elseif profileAssociation.property.domain is not null  %}
                                <a href="{{ path('class_show', {'id': profileAssociation.property.domain.id }) }}">
                                    {{ profileAssociation.property.domain }}
                                </a>
                            {% endif %}
                        </td>
                        <td class="text-nowrap small" style="padding-left: 30px;">
                            {% if profileAssociation.property.domainMinQuantifier is not null and  profileAssociation.property.domainMaxQuantifier is not null %}
                                ({% if profileAssociation.property.domainMinQuantifier != -1 %}{{ profileAssociation.property.domainMinQuantifier }}{% else %}n{% endif %},{% if  profileAssociation.property.domainMaxQuantifier != -1 %}{{ profileAssociation.property.domainMaxQuantifier }}{% else %}n{% endif %})
                            {% endif %}
                        </td>
                        <td class="text-nowrap text-center">
                            <a href="{{ path('property_show', {'id': profileAssociation.property.id}) }}">
                                {{ profileAssociation.property }}
                            </a>
                        </td>
                        <td class="text-nowrap small" style="padding-right: 30px;">
                            {% if profileAssociation.property.rangeMinQuantifier is not null and profileAssociation.property.rangeMaxQuantifier is not null %}
                                ({% if  profileAssociation.property.rangeMinQuantifier != -1 %}{{ profileAssociation.property.rangeMinQuantifier }}{% else %}n{% endif %},{% if  profileAssociation.property.rangeMaxQuantifier != -1 %}{{ profileAssociation.property.rangeMaxQuantifier }}{% else %}n{% endif %})
                            {% endif %}
                        </td>
                        <td class="text-nowrap small">
                            {% if profileAssociation.range is not null %}
                                <a href="{{ path('class_show', {'id': profileAssociation.range.id }) }}">
                                    {{ profileAssociation.range }}
                                </a>
                            {% elseif profileAssociation.property.range is not null %}
                                <a href="{{ path('class_show', {'id': profileAssociation.property.range.id }) }}">
                                    {{ profileAssociation.property.range }}
                                </a>
                            {% endif %}
                        </td>
                        <td>
                            {% if profileAssociation.property.namespaces|first.referencedVersion is not null %}
                                {{ profileAssociation.property.namespaces|first.referencedVersion }}
                            {% endif %}
                        </td>
                        <td>
                            {{ profileAssociation.systemType }}
                        </td>
                    </tr>
                    {% endif %}
                {% endfor %}
                </tbody>
            </table>
        </div>
        <div id="projects" class="tab-pane fade">
            <h3>Associated projects</h3>
            <table class="table table-striped" id="projects-table">
                <thead>
                <tr>
                    <th>Project identifier</th>
                    <th>Last updated</th>
                </tr>
                </thead>
                <tbody>
                {% for project in profile.projects %}
                <tr>
                    <td>
                        <a href="{{ path('project_show', {
                                'id': project.id
                            }) }}">
                            {{ project.standardLabel }}
                        </a>
                    </td>
                    <td>{{ project.modificationTime|date('Y-m-d') }}</td>
                </tr>
                {% endfor %}
                </tbody>
            </table>
        </div>
        <div id="namespaces" class="tab-pane fade">
        {% if profile.isOngoing %}
            <h4>Namespaces used by this profile</h4>
            {% if profile.namespaces|length == 0 %}
                <em id="empty-namespace-list-message">There is currently no namespace used by this profile.</em>
            {% endif %}
            <div class="container" id="used-namespaces-list">
                {% for namespace in profile.namespaces %}
                    <div class="row">
                        <a href="#namespaces" class="remove-namespace" data-id="{{ namespace.id }}"><span class="glyphicon glyphicon-remove text-danger" aria-hidden="true"></span></a><a href="{{ path('namespace_show', {
                            'id': namespace.id
                        }) }}">
                            {{ namespace }}
                        </a>
                        <span class="loading-icon2" data-id="{{ namespace.id }}">&nbsp;<span class="fas fa-spinner fa-spin"></span></span>
                    </div>
                {% endfor %}
            </div>
            <h4>Pick a namespace to associate with the current profile</h4>
            <div class="row">
                <div class="col-sm-6">
                    <select id="select-root-namespace">
                    {% for rootNamespace in rootNamespaces %}
                        <option value="{{ rootNamespace.id }}">{{ rootNamespace.standardLabel }}</option>
                    {% endfor %}
                    </select>
                </div>
                <div class="col-sm-6">
                    <div id="loading-icon">
                        <span class="fas fa-spinner fa-spin"></span>
                    </div>
                    <ul class="list-group" id="chosable-namespaces-list">
                    </ul>
                </div>
            </div>
        {% else %}
            <h4>Namespaces used by this profile</h4>
            {% if profile.namespaces|length == 0 %}
                <em id="empty-namespace-list-message">There is currently no namespace used by this profile.</em>
            {% endif %}
            <ul id="used-namespaces-list">
                {% for namespace in profile.namespaces %}
                    <li>
                        <a href="{{ path('namespace_show', {
                            'id': namespace.id
                        }) }}">
                            {{ namespace }}
                        </a>
                    </li>
                {% endfor %}
            </ul>
        {% endif %}
        </div>
        <div id="graph" class="tab-pane fade">
            <h3>Graph</h3>
            <p class="text-warning"><span class="fa fa-exclamation-circle"></span> Please note this is an experimental feature. <strong>Click on the full screen button if the graph is not displayed</strong></p>
            {% if profile.classes|length > 0 and profile.properties|length > 0 %}
                <a href="http://visualdataweb.de/webvowl/#url={{ url('profile_json', {'id': profile.id}) }}" target="_blank" class="btn btn-primary">Full screen (WebVOWL) <span class="fa fa-desktop"></span></a><br><br>
                <embed src="http://visualdataweb.de/webvowl/#url={{ url('profile_json', {'id': profile.id}) }}" width="100%" height="1000px"><br><br>
                <a href="http://visualdataweb.de/webvowl/#url={{ url('profile_json', {'id': profile.id}) }}" target="_blank" class="btn btn-primary">Full screen (WebVOWL) <span class="fa fa-desktop"></span></a>
            {% else %}
                <p>The webvowl graph cannot be displayed because there is no class or property in this namespace.</p>
            {% endif %}
        </div>
    </div>
</div>


{% endblock %}

{% block javascripts %}
{{ parent() }}
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.4/js/select2.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.9.0/js/bootstrap-datepicker.min.js"></script>

<script>
    $(document).ready(function() {
        $('.js-datepicker').datepicker({
            format: 'yyyy-mm-dd'
        });

        //confirmation box for publish action
        $('#publish-btn').on('click', function() {
            bootbox.confirm({
                message: "Once a profile is published, it's not possible to make it ongoing again. Are you sure you want to publish this profile?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if(result){
                        var profileID = '{{ profile.id }}';
                        var urlProfilePublish = '{{ path("profile_publish", {'id' : 'profileID'}) }}';
                        urlProfilePublish = urlProfilePublish.replace("profileID", profileID);
                        window.location = urlProfilePublish;
                    }
                }
            });
        });

        //confirmation box for deprecate action
        $('#deprecate-btn').on('click', function() {
            bootbox.confirm({
                message: "Once a profile is deprecated, it's not possible to publish it again. Are you sure you want to make this profile deprecated?",
                buttons: {
                    confirm: {
                        label: 'Yes',
                        className: 'btn-success'
                    },
                    cancel: {
                        label: 'No',
                        className: 'btn-danger'
                    }
                },
                callback: function (result) {
                    if(result){
                        var profileID = '{{ profile.id }}';
                        var urlProfileDeprecate = '{{ path("profile_deprecate", {'id' : 'profileID'}) }}';
                        urlProfileDeprecate = urlProfileDeprecate.replace("profileID", profileID);
                        window.location = urlProfileDeprecate;
                    }
                }
            });
        });

        //confirmation box for forced publication status
        $('#profile_edit_form_isForcedPublication').on('change', function() {
            if(this.checked){
                bootbox.confirm({
                    message: "It's not advisable to publish an ongoing profile. Are you sure you want to allow an API connection on this profile?",
                    buttons: {
                        confirm: {
                            label: 'Yes',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'No',
                            className: 'btn-danger'
                        }
                    },
                    callback: function (result) {
                        if(!result){
                            $('#profile_edit_form_isForcedPublication').prop('checked', false);
                        }
                    }
                });
            }

        });

        {% if profile.isOngoing %}

        var profileID = {{ profile.id }};
        var urlSelectableClasses = '{{ path("selectable_classes_profile_json", {'profile' : 'profileID'}) }}';
        urlSelectableClasses = urlSelectableClasses.replace("profileID", profileID);

        var urlAssociatedClasses = '{{ path("associated_classes_profile_json", {'profile' : 'profileID'}) }}';
        urlAssociatedClasses = urlAssociatedClasses.replace("profileID", profileID);

        var associatedClassesTable = $('#classes-table').DataTable({
            order: [[ 6, "desc" ]],
            ajax: urlAssociatedClasses,
            dataSrc: 'data',
            columns: [
                { data: null },
                { data: 'id' },
                { data: 'identifierInNamespace' },
                { data: 'standardLabel' },
                { data: 'associationType' },
                { data: 'namespace' },
                { data: null }
            ],
            columnDefs: [
                {
                    targets: 0,
                    render: function ( data, type, row, meta ) {

                        var urlRemoveClass = '{{ path("profile_class_disassociation", {'profile' : 'profileID', 'class' : 'classID'}) }}';
                        urlRemoveClass = urlRemoveClass.replace("profileID", profileID);
                        urlRemoveClass = urlRemoveClass.replace("classID", row.id);
                        if(row.associationType == 'selected') {
                            return '<a data-id="' + row.id + '" data-url="' + urlRemoveClass + '" class="remove-class"><span class="glyphicon glyphicon-remove text-danger" aria-hidden="true"></span></a><span class="remove-class-loading-icon" data-id="' + row.id + '" style="display: none"><span class="fas fa-spinner fa-spin"></span></span>';
                        }
                        else return '';
                    }
                },
                {
                    targets: 3,
                    render: function ( data, type, row, meta ) {
                        var urlClass = '{{ path("class_show", {'id' : 'classID'}) }}';
                        urlClass = urlClass.replace("classID", row.id);

                        return '<a href="' + urlClass + '">' + data + ' – ' + row.identifierInNamespace + '</a>';

                    }
                },
                {
                    targets: -1,
                    "data": null,
                    render: function ( data, type, row, meta ) {
                        if(row.associationType == 'selected'){
                            var urlSelectProperties = '{{ path("profile_properties_edit", {'profile' : 'profileID', 'class' : 'classID'}) }}';
                            urlSelectProperties = urlSelectProperties.replace("profileID", profileID);
                            urlSelectProperties = urlSelectProperties.replace("classID", row.id);
                            return '<a href="' + urlSelectProperties + '"><span class="glyphicon glyphicon-th-list"></span></a>';
                        }
                        else return '';
                    }
                },
                {
                    visible: false,
                    targets: [1,2]
                }
            ]
        });
        var selectableClassesTable = $('#selectable-classes-table').DataTable({
            ajax: urlSelectableClasses,
            dataSrc: 'data',
            columns: [
                { data: 'classId' },
                { data: 'standardLabel' },
                { data: 'namespace' },
                { data: 'identifierInNamespace' }
            ],
            columnDefs: [
                {
                    targets: 1,
                    render: function ( data, type, row, meta ) {
                        var urlSelectClass = '{{ path("profile_class_association", {'profile' : 'profileID', 'class' : 'classID'}) }}';
                        urlSelectClass = urlSelectClass.replace("profileID", profileID);
                        urlSelectClass = urlSelectClass.replace("classID", row.classId);
                        return '<a data-id="'+row.classId+'" data-url="'+urlSelectClass+'" class="select-class"><span class="plus-icon" data-id="'+row.classId+'"><span class="fas fa-plus"></span></span><span class="select-class-loading-icon" data-id="'+row.classId+'" style="display: none"><span class="fas fa-spinner fa-spin"></span></span></a>&nbsp;' + data + ' – ' + row.identifierInNamespace;
                    }
                },
                {
                    visible: false,
                    targets: [0,-1]
                }
            ]
        });
        $('#namespaces-table').DataTable();
        $('#projects-table').DataTable();

        $('#loading-icon').hide(0);
        $('.loading-icon2').hide(0);

        $('#profile_edit_form_projectOfBelonging').select2({
            width: '100%',
            sorter: function(data) {
                /* Sort data using lowercase comparison */
                return data.sort(function (a, b) {
                    a = a.text.toLowerCase();
                    b = b.text.toLowerCase();
                    if (a > b) {
                        return 1;
                    } else if (a < b) {
                        return -1;
                    }
                    return 0;
                });
            }
        });

        $('#select-root-namespace').select2({
            width: '100%',
            sorter: function(data) {
                /* Sort data using lowercase comparison */
                return data.sort(function (a, b) {
                    a = a.text.toLowerCase();
                    b = b.text.toLowerCase();
                    if (a > b) {
                        return 1;
                    } else if (a < b) {
                        return -1;
                    }
                    return 0;
                });
            }
        });

        $('#select-root-namespace').on('select2:select', function (e) {
            $('#loading-icon').show(0);
            $('#chosable-namespaces-list').empty();
            var selectedValue = e.params.data.id;
            var url = '{{ path("namespaces_by_root_id_list_json", {'id': 'selectedValue'}) }}';
            url = url.replace("selectedValue", selectedValue);
            $.ajax({
                url: url,
                type: 'GET',
                dataType: 'json',
                success:function(data){
                    $('#loading-icon').hide(0);

                    // handling the response data from the controller
                    if(data.status == 'Error'){
                        console.log("[API] ERROR: "+data.message);
                    }
                    if(data.status == 'Success'){
                        $.each(data.namespaces, function(key, val){
                            $("#chosable-namespaces-list").append($("<a class=\"list-group-item pickable-namespace\" id="+val.id+">"+val.standardLabel+"</a>"));
                        });
                    }
                }
            });
        });

        $(document).on("mouseenter touchstart", ".pickable-namespace", function() {
            $(this).prepend($("<span><i class=\"fas fa-plus\"></i>&nbsp;</span>"));
        });

        $(document).on("mouseleave touchend", ".pickable-namespace", function() {
            $(this).find(":first-child").remove();
        });

        $(document).on("click", ".pickable-namespace", function() {
            var selectedValue = $(this).attr("id");
            var profileID = {{ profile.id }}
            var url = '{{ path("profile_namespace_association", {'profile' : 'profileID','namespace': 'selectedValue'}) }}';
            url = url.replace("profileID", profileID);
            url = url.replace("selectedValue", selectedValue);
            $.ajax({
                url: url,
                type: 'POST',
                dataType: 'json',
                success:function(data){

                    // handling the response data from the controller
                    if(data.status == 'Error'){
                        console.log("[API] ERROR: "+data.message);
                    }
                    if(data.status == 'Success'){
                        selectableClassesTable.ajax.reload();
                    }
                }
            });
            var urlNamespace = '{{ path('namespace_show', {'id' : 'selectedValue'}) }}';
            urlNamespace = urlNamespace.replace('selectedValue', selectedValue);
            $("#empty-namespace-list-message").remove();
            $("#select-root-namespace option:selected").remove();
            $("#used-namespaces-list").append($('<div class="row"><a href="#namespaces" class="remove-namespace" data-id="'+selectedValue+'"><span class="glyphicon glyphicon-remove text-danger" aria-hidden="true"></span></a><a href="'+urlNamespace+'">'+$(this).text()+'</a><span class="loading-icon2" data-id="'+selectedValue+'">&nbsp;<span class="fas fa-spinner fa-spin"></span></span></div>'));
            $(".loading-icon2[data-id='"+selectedValue+"']").hide(0);
            $("#chosable-namespaces-list").empty();
        });

        $(document).on("click", ".remove-namespace", function() {
            var selectedValue = $(this).data("id");
            var profileID = {{ profile.id }}
            $(".loading-icon2[data-id='"+selectedValue+"']").show(0);
            var url = '{{ path("profile_namespace_disassociation", {'profile' : 'profileID','namespace': 'selectedValue'}) }}';
            url = url.replace("profileID", profileID);
            url = url.replace("selectedValue", selectedValue);
            $.ajax({
                url: url,
                type: 'DELETE',
                dataType: 'json',
                success:function(data){
                    selectableClassesTable.ajax.reload();
                },
                statusCode: {
                    204: function () {
                        $(".remove-namespace[data-id='"+selectedValue+"']").parent().remove();
                    }
                }
            });

        });

        $(document).on("click", ".select-class", function() {
            var selectedValue = $(this).data("id");
            $(".plus-icon[data-id='"+selectedValue+"']").hide(0);
            $(".select-class-loading-icon[data-id='"+selectedValue+"']").css('display','inline');
            var url =  $(this).data("url");
            console.log(url);
            $.ajax({
                url: url ,
                type: 'POST',
                dataType: 'json',
                success:function(data){
                    selectableClassesTable.ajax.reload();
                    associatedClassesTable.ajax.reload();
                }
            });
        });

        $(document).on("click", ".remove-class", function() {
            var selectedValue = $(this).data("id");
            $(".remove-class[data-id='"+selectedValue+"']").hide(0);
            $(".remove-class-loading-icon[data-id='"+selectedValue+"']").css('display','inline');
            var url =  $(this).data("url");
            console.log(url);
            $.ajax({
                url: url ,
                type: 'POST',
                dataType: 'json',
                success:function(data){
                    associatedClassesTable.ajax.reload();
                    selectableClassesTable.ajax.reload();
                }
            });
        });

        {% else %}
        $('#classes-table').DataTable();
        {% endif %}

        $('#labels-table').DataTable();
        $('#descriptions-table').DataTable();
        $('#properties-table').DataTable({
            initComplete: function(){
                this.api().columns([6]).every(function(){
                    var column = this;
                    var select = $('<select id="properties-status-select"><option value=""></option></select>')
                        .appendTo($(column.header()))
                        .on('change', function(){
                            var val = $.fn.dataTable.util.escapeRegex(
                                $(this).val()
                            );

                            column
                                .search(val ? '^'+val+'$' : '', true, false)
                                .draw();
                        });

                    $(select).click(function(e){
                        e.stopPropagation();
                    });

                    column.data().unique().sort().each(function(d, j){
                        select.append('<option value="'+d+'">'+d+'</option>')
                    });
                });
            }
        });
        var existsSelectedInProfile = $("#properties-status-select option[value='Selected in profile']").length !== 0; //détermine si cette valeur est dans le select
        if (existsSelectedInProfile) {
            $("#properties-status-select").val('Selected in profile').change(); //default filter on this column
        }
        $('#additional-notes-table').DataTable();
        $('#projects-table').DataTable();

        $("a[href='#graph']").click(
            function(){
                $(document).ready(function(){
                    window.location.reload();
                });
            });
    } );
</script>


{% endblock %}
